[{"authors":["btihen"],"categories":null,"content":"On a quest to explore and uplift.\nDeveloper, Educator and very curious.\nI hold a Masters in Electrical Engineering (with a focus on Materials Science). I also have a ScrumMaster certification.\nI have worked as a robotics designer, teacher, systems administrator and software engineer. My technical work has strongly influenced how I teach: Research and Agile practices have helped me develop a keen interest in the joy of exploring or \u0026lsquo;playful experiments.\u0026rsquo; Agile presents the Plan, Do, Reflect, Adjust loop and I have found that \u0026lsquo;smallifying\u0026rsquo; large tasks is an effective way to make progress with a large overwhelming project. In fact, taking little exploratory \u0026lsquo;bets\u0026rsquo; / experiments to move forward, helps many people feel safe. When I realized these are also excellent learning methodologies, I realized in addition to content, I need to teach these skills too.\nOver time I have also realized that one of the most important aspects of a classroom (or work environment) is that it is exciting, engaging and generally an uplifting environment. Or possibly an energy gifting experience. I have found the when students can choose their learning outcomes \u0026amp; goals (within the expectations of the class curriculum) the classroom can offer students these experiences too.\n","date":1595592338,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1595592338,"objectID":"d0bce26d5158f27a6f8cf294562f4503","permalink":"https://btihen.github.io/authors/btihen/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/btihen/","section":"authors","summary":"On a quest to explore and uplift.\nDeveloper, Educator and very curious.\nI hold a Masters in Electrical Engineering (with a focus on Materials Science). I also have a ScrumMaster certification.","tags":null,"title":"Bill Tihen","type":"authors"},{"authors":null,"categories":null,"content":"Install This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials just like that\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"42291f93b606a25d1333fab4504afbee","permalink":"https://btihen.github.io/explore/crystal/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/explore/crystal/","section":"explore","summary":"Learn how to use crystal","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"Mint is fun ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"2630904d917324ddeb6056948a6c27e4","permalink":"https://btihen.github.io/explore/mint/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/explore/mint/","section":"explore","summary":"Learn how to use mint","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"Overview This class is based on learning:\n Bouyancing Physics Fluid Dynamics  ","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"e694eb01448caa8f95e8d7cfc07a6905","permalink":"https://btihen.github.io/courses/boat_design/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/boat_design/","section":"courses","summary":"3-D design and printing, 3-D Analytical Geometry, Fluid Dynamics, Physics of Boyancy \u0026 Center of Gravity","tags":null,"title":"Boat Design Intro","type":"docs"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"539a070be20f4112719fce218b48a2e4","permalink":"https://btihen.github.io/courses/robot_gardner/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/courses/robot_gardner/","section":"courses","summary":"Sensors, electronics, and coding","tags":null,"title":"Robot Gardner","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nCrystal CLI ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"785ce6507db0a207d4f74c50cf456f88","permalink":"https://btihen.github.io/explore/crystal/cli/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/explore/crystal/cli/","section":"explore","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nCrystal CLI ","tags":null,"title":"Crystal CLI Usage","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nMint CLI ","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"791d2bd259bec939ffe7881dde5108a3","permalink":"https://btihen.github.io/explore/mint/cli/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/explore/mint/cli/","section":"explore","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nMint CLI ","tags":null,"title":"Mint CLI","type":"docs"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b4c7f25d5b7963758e82d0980c48943b","permalink":"https://btihen.github.io/contact/contact/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact/contact/","section":"contact","summary":"","tags":null,"title":"Contact","type":"contact"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"168159c01b62537a8068c7cfdb8f4a4d","permalink":"https://btihen.github.io/courses/boat_design/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/boat_design/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"87fb05721f9770a0171a5301a03a6f7e","permalink":"https://btihen.github.io/courses/boat_design/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/boat_design/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"90760a4db7af96bc96d01a166bc36a21","permalink":"https://btihen.github.io/courses/robot_gardner/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/robot_gardner/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"991d142ab215f3e0b69fed5f97a84078","permalink":"https://btihen.github.io/courses/robot_gardner/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/courses/robot_gardner/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":["Bill Tihen"],"categories":["Education","EDgile","Practice","Classroom"],"content":"As mentioned in the Transparency article, there is an important interaction between having the “big picture” (having a goal and some expectations along the way) and knowing “what to do next” (a feeling of workability and progress). This article explores how to establish both by creating an effective self-guided learning strategy for students.\nIn EDgility we encourage student self-determination. Student choice and understanding the big picture are critical components to cultivate self-determination. They need to understand the big picture in order to exercise real choice. To support them, I like to offer students projects with broad goals. The big general goal starts the process of smallifying, because they will have to smallify in order to make progress. The students first explore the field just enough to find ideas that interest them, to pick their own specific goal, and to find a purpose or context for that goal. It is important at this stage that the student’s goals already include a complication / design compromise consistent with the overall goal. For example, students may choose to build a cargo boat that saves energy, but it must also be stable in waves. Commercially, their boat is only better if it is effective at the overall goal (staying afloat) and good at a new specific goal (saving energy). Students must think broadly and understand the context of their project in actual use.\nThis first step generally creates a lot of enthusiasm (and ideas) as the students create a storyline, a new identity, and an organization to support their mission. The story line and organization need to be attractive to them and others, both to support their motivation and to make for a good sales pitch at the end of the unit.\nTwo classes that started with big goals that required smallifying into many workable steps were the “Boat Design” and “Robot Gardeners” classes. I’ve written about those elsewhere, see e.g. boat design in ECIS Global Insights and Robot Gardeners in Spotlight.\nThe next step in smallifying is for the students to figure out the most important aspects needed to accomplish the big goals. I call this distilling the essence of the topic in relation to their goal. For example, in the boat design class, all boat designs must understand buoyancy (flotation), and depending on the boat specialty and safety features, two or three other concepts will be important, i.e., students who choose to build a speedboat will need excellent fluid efficiency and perhaps also stability while turning. Learning to discover the important aspects of a large complex field and to find the critical aspects relating to one’s goals is an important life skill in almost all aspects of life. It is, in fact, a skill that transcends the specific content of the class - and therefore lifeworthy.\nI give the students only a short amount of time to do these first two steps (perhaps one or two classes total). This prevents analysis paralysis. Besides, not having time to fully understand a field before starting gives the students permission to adjust as they explore their topic. Learning to manage and adjust projects as you learn and progress is known as agile management - another useful life-skill in our quickly evolving world.\nAt this point the students start the iterative smallification of concrete actionable steps to learn and progress toward the goal. These small steps are exploratory and safe. Safe means that the step is small enough that it isn’t upsetting if it doesn\u0026rsquo;t work on the first try and safe means that the teacher is neutral about successful and unsuccessful steps. Exploring and learning is what is celebrated. Under no condition can mistakes be punished or made a point of shame. Without feeling safe about errors and unknowns, smallifying and creative learning is almost impossible. It will take time for most students to trust this environment, thus initially, expect students to be reluctant to smallify in order to explore all the unknowns inherent in big messy goals.\nFiguring out the next workable step happens as the student progresses - students are not working from a large, clear plan that maps out each step at the beginning of the project. I do give students who have never worked this way a few introductory steps to get them started. Once underway, students gain confidence and generally have enough experience to find the next workable step - as they progress. Here’s a concrete example of smallifying, based on building a racing catamaran that is stable while turning at speed might be:\n configure your computer with the software to print on a 3-D printer; design and print a box (or any simple shape); print the above shape, but make it hollow (learn to subtract a shape); print the above hollowed shape joined with a second shape; if the first shape is a box, add a cone, sphere, pyramid, etc (this requires addition and translation); etc. (now the students have enough basics to keep learning and progressing).  As Bill Rankin said in several keynote addresses, you learn to cook by cooking. In fact, you learn almost anything by doing it. You have to jump in and start, or “get cooking.”\nOf course, a student who chooses to build a rescue boat will have a different set of small steps, but common to both boats is learning to work incrementally and building on the next workable small step toward the goal. This is a powerful learning technique that builds confidence in students\u0026rsquo; ability to learn and be successful.\nOnce the students get the hang of this process of moving from the big picture, identifying a few critical aspects, and smallifiying their project into small workable steps, they have effectively learned how to learn and self-correct as they move toward a large complex goal. This meta-aspect of the learning process and its deliberate practice may in the long run be a lifeworthy skill that goes far beyond the specific content of a single class. Engineering classes such as the Boat Design class example here work well. So, too, do classes in art and other areas.\nCaution: Smallification happens in small chunks (one or two steps at a time maximum). In the tech world we call this planning at the last responsible moment, but fundamentally, it is about figuring out the next workable thing when the students have enough information to see that next step. This prevents the feeling that the big goal is just too overwhelming. Students who have never worked this way will need some smallifying guidance. For example, in the Boat Design class, I gave students a few steps to get started and I give the details of the final assessment. (I like a public demonstration and company pitch.) As a teacher you may want to step through a project to be more confident in the timing, practice the smallifying, etc, but be careful not to give away more than needed and avoid at all costs big and detailed plans! The fun and exploration is a central feature of a motivating and educational experience for the students.\nFundamentally, creating a learning environment where having the big picture and exploring the details along the way can create an uplifting educational journey.\n","date":1595592338,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1595592338,"objectID":"d61e8ea7d7e5dee4e6fb4fc95d740789","permalink":"https://btihen.github.io/post_edu/edgility_btihen_smallify/","publishdate":"2020-07-24T14:05:38+02:00","relpermalink":"/post_edu/edgility_btihen_smallify/","section":"post_edu","summary":"Get the big picture: students set goals (outcomes), deconstruct (find the most important (3-5) aspects / skills related to the goal), and then smallify (learn to find the next small step that builds on what’s already done), and finally, learn through deliberate practice (self-correcting as they progress).","tags":["value","exploration","exploration","uplift","self-motivation","student choice"],"title":"Smallify to Learn Effectively","type":"post_edu"},{"authors":["Bill Tihen"],"categories":["Code","Elixir","Phoenix"],"content":"Purpose This article builds on the existing article: https://btihen.me/post_tech/phoenix_1_5_blog_intro/ and adds nested relationships and has_many_through.\nnow lets create comments (a has many through for users) we will use mix phx.gen.context this time since we will use the posts page to add comments. We will use the context generator since we don\u0026rsquo;t need any views or templates generated. Answer Y to the question about the context already existing. We could create to API files within the Context before the one file gets too large, but we will skip that.\nmix phx.gen.context Blogs Comment comments message:text post_id:references:posts user_id:references:users  Update Relationships We need to create the relationships and update the migration to delete comments when post is deleted:\nNow lets create the relationship between posts and comments:\n# lib/feenix_intro/blogs/comment.ex efmodule FeenixIntro.Blogs.Comment do use Ecto.Schema import Ecto.Changeset alias FeenixIntro.Blogs.Post alias FeenixIntro.Accounts.User @required_fields [:user_id, :post_id, :message] schema \u0026quot;comments\u0026quot; do # remove these # field :post_id, :id # field :user_id, :id # add these: belongs_to(:user, User) belongs_to(:post, Post) field :message, :string timestamps() end @doc false def changeset(comment, attrs) do comment |\u0026gt; cast(attrs, @required_fields) |\u0026gt; validate_required(@required_fields) end  Now lets update posts relationship to comments:\n# lib/feenix_intro/blogs/post.ex # ... alias FeenixIntro.Blogs.Comment # ... schema \u0026quot;posts\u0026quot; do # ... # add this has_many(:comments, Comment) # ...  We could do the same has_many relationship with users - but its not needed. It is unlikely we would want to look-up all a user\u0026rsquo;s comments outside the context of a Blog.\nUpdate Migration to delete sub-resource when top-resource is deleted To create the rails equivalent of dependent_delete we change the migration to the following:\n# priv/repo/migrations/20200704161651_create_comments.exs # ... # replce # add :post_id, references(:posts, on_delete: :nothing) # add :user_id, references(:users, on_delete: :nothing) # with add :post_id, references(:posts, on_delete: :delete_all), null: false add :user_id, references(:users, on_delete: :delete_all), null: false # ...  Now we should be able to migrate:\nmix ecto.migrate  Testing Start simple with the seed file\nLets add a comment to our prebuild posts:\n# priv/repo/seeds.exs # ... # add the alias to keep things short alias FeenixIntro.Blogs.Comment # ... # this ensures all we have all the correct fields: Repo.insert!(%Comment{user_id: dog.id, post_id: post1.id, message: \u0026quot;woof\u0026quot; }) # this also checks the relationships post2 |\u0026gt; Ecto.build_assoc(:comments) |\u0026gt; Comment.changeset(%{user_id: dog.id, post_id: post2.id, message: \u0026quot;BARK\u0026quot; }) |\u0026gt; Repo.insert!()  Lets run the seed and see if all is working:\nmix run priv/repo/seeds.exs  Nice lets make a quick git snapshot before we work on the html aspects\ngit add . git commit -m \u0026quot;Comments added as a resource and relationship to Posts established\u0026quot;  Preload comments within get_post To show the comments within a post we will need to preload the comments \u0026ndash; this is done by adding Repo.preload(:comments) to our function: def get_post!(id) \u0026ndash; however, we will also want to display the comment\u0026rsquo;s author \u0026ndash; so we need to do a nested preload with: Repo.preload([comments: [:user]])\nSo now this function looks like:\n# lib/feenix_intro/blogs.ex def get_post!(id) do Post |\u0026gt; Repo.get!(id) |\u0026gt; Repo.preload(:user) |\u0026gt; Repo.preload([comments: [:user]]) end  This can actually be shortened to (this will be helpful later):\nlib/feenix_intro/blogs.ex def get_post!(id) do Post |\u0026gt; Repo.get!(id) |\u0026gt; Repo.preload([:user, comments: [:user]]) end  Display the comments within the Post show Now that we have updated the get_post! to preload comments we can display the comments too by adding to the end of our post\u0026rsquo;s - show template:\n# lib/feenix_intro_web/templates/post/show.html.eex # ... \u0026lt;table\u0026gt; \u0026lt;thead\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th\u0026gt;Comment Author\u0026lt;/th\u0026gt; \u0026lt;th\u0026gt;Message\u0026lt;/th\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;/thead\u0026gt; \u0026lt;tbody\u0026gt; \u0026lt;%= for comment \u0026lt;- @post.comments do %\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;%= comment.user.name %\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;%= comment.message %\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;/tr\u0026gt; \u0026lt;% end %\u0026gt; \u0026lt;/tbody\u0026gt; \u0026lt;/table\u0026gt; \u0026lt;span\u0026gt;\u0026lt;%= link \u0026quot;Edit\u0026quot;, to: Routes.post_path(@conn, :edit, @post) %\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt;\u0026lt;%= link \u0026quot;Back\u0026quot;, to: Routes.post_path(@conn, :index) %\u0026gt;\u0026lt;/span\u0026gt;  Start the server mix phx.server and be sure this works\nAssuming it works, lets commit:\ngit add . git commit -m \u0026quot;display comments and comment author on post show page\u0026quot;  Creating Comments (as a nested resource) Since we have added comments within the Blogs context and they are associated with a post - it makes sense to create and display comments as a nested resource. To set this up lets change our routes file:\n# lib/feenix_intro_web/router.ex # ... scope \u0026quot;/\u0026quot;, FeenixIntroWeb do pipe_through :browser get \u0026quot;/\u0026quot;, PageController, :index resources \u0026quot;/users\u0026quot;, UserController # replace this line: # resources \u0026quot;/posts\u0026quot;, PostController # with: resources \u0026quot;/posts\u0026quot;, PostController do resources \u0026quot;/comments\u0026quot;, CommentController, only: [:create] end end # ...  This means we will be able to create a comment only within the context of an existing post (seems reasonable) \u0026ndash; more actions can be added later such as edit or delete possibly.\nThis also means we need to display our comments within the context of existing posts (the best place for this is the show - where all the details of the post are shown).\nLet\u0026rsquo;s create the controller we just defined - we will need to make a new file:\n# lib/feenix_intro_web/controllers/comment_controller.ex defmodule FeenixIntroWeb.CommentController do use FeenixIntroWeb, :controller alias FeenixIntro.Blogs def create(conn, %{\u0026quot;post_id\u0026quot; =\u0026gt; post_id, \u0026quot;comment\u0026quot; =\u0026gt; comment_params}) do # define the post we are nested within post = Blogs.get_post!(post_id) # create our new comment and handle (success or failure) case Blogs.create_comment(post, comment_params) do {:ok, _comment} -\u0026gt; conn |\u0026gt; put_flash(:info, \u0026quot;Comment created\u0026quot;) |\u0026gt; redirect(to: Routes.post_path(conn, :show, post)) # TODO: return to form and show errors {:error, _changeset} -\u0026gt; conn |\u0026gt; put_flash(:error, \u0026quot;Comment creation failed\u0026quot;) |\u0026gt; redirect(to: Routes.post_path(conn, :show, post)) end end end  Note: at the moment we don\u0026rsquo;t handle errors, and allow those to be fixed. We will get to that in a second step.\nWe need to update the function create_comment in order to work as a nested resource:\n# @doc \u0026quot;\u0026quot;\u0026quot; Creates a comment. ## Examples # also update our function docs # replace # iex\u0026gt; create_comment(%{field: value}) # with iex\u0026gt; create_comment(post, %{field: value}) {:ok, %Comment{}} # replace: # iex\u0026gt; create_comment(%{field: bad_value}) # with: iex\u0026gt; create_comment(post, %{field: bad_value}) {:error, %Ecto.Changeset{}} \u0026quot;\u0026quot;\u0026quot; # replace # def create_comment(attrs \\\\ %{}) do # %Comment{} # |\u0026gt; Comment.changeset(attrs) # |\u0026gt; Repo.insert() # end # with (this uses the passed in post and creates an association with the new comment) def create_comment(%Post{} = post, attrs \\\\ %{}) do post |\u0026gt; Ecto.build_assoc(:comments) |\u0026gt; Comment.changeset(attrs) |\u0026gt; Repo.insert() end  In order to create a new Comment form the show function will need to borrow from a typical new function and send and empty struct (changeset) for the form \u0026ndash; lets start by updating the PostController show function:\n# lib/feenix_intro_web/controllers/post_controller.ex # ... alias FeenixIntro.Blogs.Comment def show(conn, %{\u0026quot;id\u0026quot; =\u0026gt; id}) do post = Blogs.get_post!(id) users = Accounts.list_users() # replace: # render(conn, \u0026quot;show.html\u0026quot;, post: post, users: users) # with: This allows us to add comments on the Post show form! comment_changeset = Blogs.change_comment(%Comment{}) render(conn, \u0026quot;show.html\u0026quot;, post: post, users: users, comment_changeset: comment_changeset) end  Now that we have an empty changeset for the form - we can add the form to the show page with:\n# lib/feenix_intro_web/templates/post/show.html.eex # ... \u0026lt;h3\u0026gt;Add a Comment\u0026lt;/h3\u0026gt; \u0026lt;%= form_for @comment_changeset, Routes.post_comment_path(@conn, :create, @post), fn form -\u0026gt; %\u0026gt; \u0026lt;%= label form, \u0026quot;Author\u0026quot; %\u0026gt; \u0026lt;%= select form, :user_id, Enum.map(@users, \u0026amp;{\u0026amp;1.name, \u0026amp;1.id}) %\u0026gt; \u0026lt;%= error_tag form, :user %\u0026gt; \u0026lt;%= label form, :message %\u0026gt; \u0026lt;%= textarea form, :message %\u0026gt; \u0026lt;%= error_tag form, :message %\u0026gt; \u0026lt;div\u0026gt; \u0026lt;%= submit \u0026quot;Save\u0026quot;%\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;% end %\u0026gt; # ...  Let\u0026rsquo;s try this out with: mix phx.server\nassuming all works as expected let\u0026rsquo;s make another git commit:\ngit add . git commit -m \u0026quot;comment creation as a nested resource within posts\u0026quot;  Handle Input Errors Prevent empty strings:\n https://stackoverflow.com/questions/32784008/phoenix-render-template-of-other-folder  lets add a minimum message legth to comments:\n# lib/feenix_intro/blogs/comment.ex def changeset(comment, attrs) do comment |\u0026gt; cast(attrs, @required_fields) |\u0026gt; validate_required(@required_fields) |\u0026gt; validate_length(:message, min: 3) end  Now, change the controller to prep the data just like a post show and send the changeset - with the errors. |\u0026gt; put_view(FeenixIntroWeb.PostView) is how we redirect to other external views as of Phoenix 1.5.1:\n# lib/feenix_intro_web/controllers/comment_controller.ex # add the alias alias FeenixIntro.Accounts # ... def create(conn, %{\u0026quot;post_id\u0026quot; =\u0026gt; post_id, \u0026quot;comment\u0026quot; =\u0026gt; comment_params}) do # ... # replace: # {:error, _changeset} -\u0026gt; # conn # |\u0026gt; put_flash(:error, \u0026quot;Comment creation failed, please fix the errors\u0026quot;) # |\u0026gt; redirect(to: Routes.post_path(conn, :show, post)) # with: {:error, %Ecto.Changeset{} = changeset} -\u0026gt; users = Accounts.list_users() conn |\u0026gt; put_flash(:error, \u0026quot;Comment creation failed, please fix the errors\u0026quot;) |\u0026gt; put_view(FeenixIntroWeb.PostView) # as of Phoenix 1.5.1 |\u0026gt; render(\u0026quot;show.html\u0026quot;, post: post, users: users, comment_changeset: changeset) # ...  Assuming this works make a new git commit:\ngit add . git commit -m \u0026quot;handle comment creation errors\u0026quot;  Flexible preloading You may have noticed the pre-loading is hard-coded \u0026ndash; in this case it is ok, but might not always be good. Here is a flexible alternative:\nWe can update / replace the following functions with the following:\n# lib/feenix_intro/blogs.ex def list_posts(opts \\\\ [:user]) do preloads = Keyword.get(opts, :preloads, []) Post |\u0026gt; Repo.all() |\u0026gt; Repo.preload(preloads) end def get_post!(id, opts \\\\ [:user, comments: [:user]]) do preloads = Keyword.get(opts, :preloads, []) Post |\u0026gt; Repo.get!(id) |\u0026gt; Repo.preload(preloads) end def get_comment!(id, opts \\\\ [:user]) do preloads = Keyword.get(opts, :preloads, []) Comment |\u0026gt; Repo.get!(id) |\u0026gt; Repo.preload(preloads) end  And now we can change our show post controller to look like - so that we can use this flexibility:\n# lib/feenix_intro_web/controllers/post_controller.ex # ... def index(conn, _params) do # posts = Blogs.list_posts() preloads = [:user] posts = Blogs.list_posts(preloads: preloads) render(conn, \u0026quot;index.html\u0026quot;, posts: posts) end def new(conn, _params) do users = Accounts.list_users() changeset = Blogs.change_post(%Post{}) render(conn, \u0026quot;new.html\u0026quot;, changeset: changeset, users: users) end # ... def show(conn, %{\u0026quot;id\u0026quot; =\u0026gt; id}) do # post = Blogs.get_post!(id) preloads = [:user, comments: [:user]] post = Blogs.get_post!(id, preloads: preloads) users = Accounts.list_users() # This allows us to add comments on the Post show form! comment_changeset = Blogs.change_comment(%Comment{}) render(conn, \u0026quot;show.html\u0026quot;, post: post, users: users, comment_changeset: comment_changeset) end  Now we have the flexibilty to preload or not depending on what we want to do,\n","date":1594367031,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594367031,"objectID":"93cb17502099bf4c6004739b3435f9ac","permalink":"https://btihen.github.io/post_tech/phoenix_1_5_blog_w_comments/","publishdate":"2020-07-10T09:43:51+02:00","relpermalink":"/post_tech/phoenix_1_5_blog_w_comments/","section":"post_tech","summary":"Exploring more nested Reources with Phoenix","tags":["Relationships","Templates","Nested Preloading","Nested Resources","Render Foriegn Views","User Error Handling"],"title":"Phoenix 1.5 Blog with Comments","type":"post_tech"},{"authors":["Bill Tihen"],"categories":["Code","Phoenix","Elixir"],"content":"Purpose This article creates a basic web application backed by a database and creates a few relationships. I\u0026rsquo;ll use the mix generator commands to make this process quick and easy. In step two we will add a graphql api.\nTopics Covered  create a project create a resource dropdown list of a collection pre-load/display sub-reources create a has_many relationship create a belongs_to relationship delete has_many sub-resources when top resource is deleted  Getting Started - create an app find the most recent phoenix version: https://github.com/phoenixframework/phoenix/releases\nmix archive.install hex phx_new 1.5.3 mix phx.new feenix_intro cd feenix_intro mix ecto.create  test with: mix phx.server and go to http://localhost:4000\nIdeally you see a the Phoenix Start Page.\nLet\u0026rsquo;s create a git snapshot\ngit init \u0026amp;\u0026amp; git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;init\u0026quot;  Create Contexts Context helps us create areas of code isolation and creates an API for other contexts to use\nIn our case we will need a Blogs and Accounts (better would have been Authors) context\nBlogs will have the posts and comments and Accounts will have the user and login credentials and user relationships (why not)? To see the full documentation on Contexts see: https://hexdocs.pm/phoenix/contexts.html\nWe will generate two resources and Contexts (and add more later) - lets start with users who will post their blogs (users will be within the Accounts context and posts will be within the Blogs context):\nmix phx.gen.html Accounts User users name:string email:string username:string:unique mix phx.gen.html Blogs Post posts title:string body:text user_id:references:users  Notice we can generate unique fields with :unique\nAnd we can generate relationships (foriegn keys) with references\nNow that we have generated our code - we need to make a few updates:\nFirst: we need to update our routes in the scope area to look like:\n# lib/ideas_web/router.ex scope \u0026quot;/\u0026quot;, FeenixIntroWeb do pipe_through :browser get \u0026quot;/\u0026quot;, PageController, :index resources \u0026quot;/users\u0026quot;, UserController resources \u0026quot;/posts\u0026quot;, PostController end  NOTE: the API\u0026rsquo;s for our Contexts Accounts and Blogs is in lib/feenix_intro/accounts.ex and lib/feenix_intro/blogs/post.ex respectively - as we add more info into these contexts these files will get long! Ideally you will always interact with the Context API and not the Repo directly this will help create much more managable code.\nDefine the has_many relationship Before we migrate we need to define the relationships:\nso we update the users with a has_many relationship to posts\n# lib/feenix_intro/accounts/user.ex defmodule FeenixIntro.Accounts.User do use Ecto.Schema import Ecto.Changeset alias FeenixIntro.Blogs.Post @required_fields [:name, :email, :username] schema \u0026quot;users\u0026quot; do has_many(:posts, Post) field :name, :string field :email, :string field :username, :string timestamps() end @doc false def changeset(user, attrs) do user |\u0026gt; cast(attrs, @required_fields) |\u0026gt; validate_required(@required_fields) |\u0026gt; unique_constraint(:username) end end  If you skip the alias, then has_many needs to be written as: has_many(:posts, FeenixIntro.Blogs.Post)\nDefine the belongs_to relationship IMPORTANT: replace the field :user_id, :id with belongs_to(:user, User) \u0026ndash; you CAN\u0026rsquo;T have both!\n# lib/feenix_intro/blogs/post.ex defmodule FeenixIntro.Blogs.Post do use Ecto.Schema import Ecto.Changeset alias FeenixIntro.Blogs.Post alias FeenixIntro.Accounts.User @required_fields [:user_id, :title, :body] schema \u0026quot;posts\u0026quot; do belongs_to(:user, User) # field :user_id, :id field :body, :string field :title, :string timestamps() end @doc false def changeset(post, attrs) do post |\u0026gt; cast(attrs, @required_fields) |\u0026gt; validate_required(@required_fields) end end  NOTE: @required_fields [:user_id, :title, :body] isn\u0026rsquo;t required, but as things change defining a constant that can be reused can be convient.\nAuto delete sub-resources To be sure we don\u0026rsquo;t have unreferenced blogs if a user gets deleted we need to change our Blog migration to:\n# priv/repo/migrations/20200704152318_create_posts.exs defmodule FeenixIntro.Repo.Migrations.CreatePosts do use Ecto.Migration def change do create table(:posts) do add :title, :string add :body, :text # remove the default # add :user_id, references(:users, on_delete: :nothing) # add the following to auto delete posts if user is deleted! add :user_id, references(:users, on_delete: :delete_all), null: false timestamps() end create index(:posts, [:user_id]) end end  Now it should be safe to migrate using:\nmix ecto.migrate  Seed Data Let\u0026rsquo;s create seed data so that one we know how to do that and two have some data to test before we get all our views and forms working:\n# priv/repo/seeds.exs # Script for populating the database. You can run it as: # # mix run priv/repo/seeds.exs # # We recommend using the bang functions (`insert!`, `update!` # and so on) as they will fail if something goes wrong. alias FeenixIntro.Repo alias FeenixIntro.Blogs.Post alias FeenixIntro.Accounts.User # reset the datastore Repo.delete_all(User) # this should also delete all Posts # insert people me = Repo.insert!(%User{ name: \u0026quot;Bill\u0026quot;, email: \u0026quot;bill@example.com\u0026quot;, username: \u0026quot;bill\u0026quot; }) dog = Repo.insert!(%User{ name: \u0026quot;Nyima\u0026quot;, email: \u0026quot;nyima@example.com\u0026quot;, username: \u0026quot;nyima\u0026quot; }) Repo.insert!(%Post{ user_id: me.id, title: \u0026quot;Elixir\u0026quot;, body: \u0026quot;Very cool ideas\u0026quot; }) Repo.insert!(%Post{ user_id: me.id, title: \u0026quot;Phoenix\u0026quot;, body: \u0026quot;live is fascinating\u0026quot; }) Repo.insert!(%Post{ user_id: dog.id, title: \u0026quot;Walk\u0026quot;, body: \u0026quot;oh cool\u0026quot; }) Repo.insert!(%Post{ user_id: dog.id, title: \u0026quot;Dinner\u0026quot;, body: \u0026quot;YES!\u0026quot; })  now as the comments state run:\nmix run priv/repo/seeds.exs  Testing run:\nmix phx.server # or if you prefer: # iex -S mix phx.server  Test USERS:\nGo to: http://localhost:4000/users\nwhen we list users and create users - all is well\nTEST POSTS\nGo to: http://localhost:4000/posts\nwhen we do the same withe posts - we get an error creating new posts and we don\u0026rsquo;t see the author in index and show\n we can\u0026rsquo;t create a post since we required the user_id and there is not field for that we can\u0026rsquo;t list the author\u0026rsquo;s name (just the author\u0026rsquo;s ID) until we preload the author along with the post  Fix Post creation with a dropdown list of resources Normally, this would be done with session info to autoselect the authenticated author, but that is for another day. In this case, we will demonstrate how to load and pass a collection and use that to populate a dropdown entry.\nIn the controller we must load users and add the user_id to the post form: whe we look in the Accounts API we see: list_users()\n# lib/feenix_intro_web/controllers/post_controller.ex # ... # add the accounts context alias alias FeenixIntro.Accounts # ... def new(conn, _params) do changeset = Blogs.change_post(%Post{}) # replace: # render(conn, \u0026quot;new.html\u0026quot;, changeset: changeset) # with: # collection of users for post form users = Accounts.list_users() # include the collection of users to the new form render(conn, \u0026quot;new.html\u0026quot;, changeset: changeset, users: users) end # ... def edit(conn, %{\u0026quot;id\u0026quot; =\u0026gt; id}) do post = Blogs.get_post!(id) changeset = Blogs.change_post(post) # replace: render(conn, \u0026quot;edit.html\u0026quot;, post: post, changeset: changeset) # with: users = Accounts.list_users() render(conn, \u0026quot;edit.html\u0026quot;, post: post, changeset: changeset, users: users) end # ...  Now we need to adapt the form to give us a choice of users:\n# lib/feenix_intro_web/templates/post/form.html.eex \u0026lt;%= form_for @changeset, @action, fn f -\u0026gt; %\u0026gt; \u0026lt;%= if @changeset.action do %\u0026gt; \u0026lt;div class=\u0026quot;alert alert-danger\u0026quot;\u0026gt; \u0026lt;p\u0026gt;Oops, something went wrong! Please check the errors below.\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;% end %\u0026gt; \u0026lt;%= label f, \u0026quot;Author\u0026quot; %\u0026gt; \u0026lt;%= select f, :user_id, Enum.map(@users, \u0026amp;{\u0026amp;1.name, \u0026amp;1.id}) %\u0026gt; \u0026lt;%= error_tag f, :user %\u0026gt; # ...  Assuming you can create posts now, lets make another git snapshot:\ngit add . git commit -m \u0026quot;users and posts resources can be created\u0026quot;  Display the Author of Post (with Preloads) lets display the Blog author - that\u0026rsquo;s often interesting to others. We can do this with preloading in our Blog context:\n# lib/feenix_intro/blogs.ex # change this line: # def list_posts, do: Repo.all(Post) def list_posts do Post |\u0026gt; Repo.all() |\u0026gt; Repo.preload(:user) end  and also our get_post\n# lib/feenix_intro/blogs.ex # change: # def get_post!(id), do: Repo.get!(Post, id) # into: def get_post!(id) do Post |\u0026gt; Repo.get!(id) |\u0026gt; Repo.preload(:user) end  now we can update our index and show page to display the author\u0026rsquo;s name at the top of the page:\n# lib/feenix_intro_web/templates/post/show.html.eex \u0026lt;h1\u0026gt;Show Post\u0026lt;/h1\u0026gt; \u0026lt;ul\u0026gt; \u0026lt;li\u0026gt; \u0026lt;strong\u0026gt;Author:\u0026lt;/strong\u0026gt; \u0026lt;%= @post.user.name %\u0026gt; \u0026lt;/li\u0026gt;  and in the index too:\n# lib/feenix_intro_web/templates/post/index.html.eex # ... \u0026lt;%= for post \u0026lt;- @posts do %\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;td\u0026gt;\u0026lt;%= post.user.name %\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;%= post.title %\u0026gt;\u0026lt;/td\u0026gt; \u0026lt;td\u0026gt;\u0026lt;%= post.body %\u0026gt;\u0026lt;/td\u0026gt; # ...  Assuming authors and preload works properly, we can make another git snapshot:\ngit add . git commit -m \u0026quot;authors names are displayed now with preloading\u0026quot;  Source code https://github.com/btihen/PhoenixIntro\nHelpful Resources used:  https://elixircasts.io/phoenix-contexts https://github.com/conradwt/zero-to-graphql-using-phoenix https://medium.com/@damonvjanis/ecto-preloads-in-phoenix-contexts-167d11e5405e https://dev.to/joseph_lozano/setting-up-a-new-phoenix-1-5-project-with-phoenix-liveview-309n https://medium.com/velotio-perspectives/creating-graphql-apis-using-elixir-phoenix-and-absinthe-486ff38f2549  ","date":1593860789,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594033589,"objectID":"b03ec72238184520a4eab83b91c8a9da","permalink":"https://btihen.github.io/post_tech/phoenix_1_5_blog_intro/","publishdate":"2020-07-04T13:06:29+02:00","relpermalink":"/post_tech/phoenix_1_5_blog_intro/","section":"post_tech","summary":"This article covers how to create a new app with contexts, relationships, preloading, etc.  The basics for most dynamic websites (excluding authentication). Comming later.","tags":["Relationships","Templates","Preloading","has_many","belongs_to","dependent delete","selection in form"],"title":"Phoenix 1.5 Blog Intro","type":"post_tech"},{"authors":["Bill Tihen"],"categories":["Education","Classroom","EDgile","Practice"],"content":"Good learning projects (quite possibly all interesting projects), must have the right amount of complexity and built-in imperfections due to design trade-offs and compromises. This ensures that projects aren’t google-able AND are challenging enough to encourage real learning. I like to think that “challenging enough” ensures that students experience a sense of the “hero’s journey” while working on their projects and then when they are successful they will have a sense of pride in what they learned and accomplished.\nThis level of complexity has two side effects that are common in the real world, but uncommon in education:\n how to arrive at the best solution is unknown and uncertain (by even the teacher) and will require exploration - quite possibly there is more than one workable solution; and the process of exploring to find a workable solution will involve what is commonly called the dreaded deadend or, in my field of tech, going down the rabbit hole. Unfortunately, this is often seen as a problem - not knowing and not understanding is, after all, what schools set out to correct. Allowing students to head in the wrong direction, especially since many people value efficiency (for example, discovering the fastest way to learn), can seem wrong-headed, but schools in theory should value worthwhile learning as their top priority, not speed.  Ideally, as students work, they self-assess, self-reflect, and self-correct their own work. It is, unfortunately, very common that we as teachers correct students and we as teachers tell them not only what to rework, and how to do it. This may be efficient at getting certain results - for example, completed projects. However, I question if that is valuable learning. When we judge student work, students learn to work toward the approval found in a grade, which alters learning. Additionally, when we tell students what to do, they don’t learn to self-regulate and self-motivate their own learning processes.\nOn the other hand, when students can engage in deliberate practice (where they self-assess, self-reflect, self-correct, and choose to redo until they themselves are satisfied), then students not only learn the classroom curriculum, but also lifeworthy skills, including: problem solving skills, balancing competing design needs, grit (stick-to-it-ive-ness), self-directed learning, and the joy of learning and discovery. In this way, students are much more likely to become life-long learners.\nTo ensure that students learn the process of deliberate practice, it is important to create a classroom environment where it is straightforward for students to be able to self-assess. I have found the best way to do this is to use \u0026lsquo;natural\u0026rsquo; assessments. At least in the world of code, engineering, and physics, this is pretty straightforward. Make rubrics in which the students can test themselves, e.g. in a class making boats, the rubric will ask if it floats with a payload, say a large coin. For areas where natural assessment isn’t as easy, I teach the kids how to get (and give) each other helpful feedback (described in a later article). In this way, students are helping each other, learning from each other, and in the end self-assessing what to do with the feedback. They are no longer as reliant on the teacher.\nThe beauty of letting students learn this way, when there is safety to explore (\u0026amp; make mistakes), is that the students often enjoy the learning, gain self-confidence, and possibly learn the JOY of learning. If this joy of learning becomes commonplace in education, we are very likely to have many more joyful, lifelong learners and innovators.\n","date":1593349282,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592312482,"objectID":"c068b7a3d4c13a81938298cffeae45ac","permalink":"https://btihen.github.io/post_edu/edgility_btihen_rework/","publishdate":"2020-06-28T15:01:22+02:00","relpermalink":"/post_edu/edgility_btihen_rework/","section":"post_edu","summary":"Complex projects provide the opportunity to explore and learn what does and doesn’t work. Understanding what doesn’t work and adjusting (redoing) work can often lead to tremendous learning. The caveat is that teachers must create a safe environment, without judgement, which creates space for 'mistakes' and 'rework.'","tags":["deliberate practice","self-assess","self-reflect","self-Correct","joy","explore"],"title":"Rework through Deliberate Practice","type":"post_edu"},{"authors":["Bill Tihen"],"categories":["Education","EDgile","Practice","Classroom"],"content":"Fun and a sense of adventure can be crucial to classroom engagement and learning. Cultivating a sense of adventure is similar to encouraging an atmosphere of playfulness and joy of learning. This can be quite straightforward when students are allowed to create their own goals and their own context for the goals within the curriculum. Of course, any good adventure can’t be too easy. It’s the teacher’s job to make sure a project has no obvious, googleable answer.\nWe might worry that making the project hard and beyond what the students know how to do could be unfair or even unjust. This might be true. When students are used to the mindset of getting things right the first time, it is difficult for them to take an idea and ‘play’ with it until something works. This adjustment takes some time, but once they get the hang of it, students enjoy exploring and they learn quickly.\nPersonally, I most enjoy observing how students learn resilience through ‘playing’ with ideas and trying different options until they find a solution. In fact, in today’s world it may be more important to learn resilience, persistence, and finding the next small workable step in order to progress toward a goal.\nOf course creating an environment where exploration can thrive requires not doing a few things, too - such as:\n Not judging or criticizing mistakes or rework Not judging the work or its qualities, instead let the kids cultivate their own pride and ownership (the minimum quality tests need clear, objective and observable) Not celebrating the answers, but celebrating the exploratory and learning aspects. Not requiring that every student have the same depth of knowledge in each part of the project. It\u0026rsquo;s important to define baseline knowledge they all need to have - but after that they need to be free to explore more deeply what the student finds interesting.  To encourage exploration we have found that the following the guidance for a growth mindset is very helpful:\n Praise the grit and perseverance of arriving at a workable solution; Cultivate the mindset of finding the next workable thing to try, even when there is no clear path to the goal; and Encourage / expect (maybe even require) rework and changes.  On a practical note, it is important to create projects that are complex and have some built-in conflict that requires balancing and tradeoffs. This is important for several reasons:\n Without trade-offs, a problem isn’t realistic and can be too easily googled. The problem must be challenging enough or it isn’t engaging (but it needs to be workable). Having to resolve a conflict or resolve tradeoffs and still arrive at one\u0026rsquo;s goals requires students to really go into depth and learn that aspect extra well.   NOTE: In the world of engineering, it is important to have a solid generalist understanding of the field (like the basic required information tested at school), but that is rarely enough for most teams. It is important to be a specialist in at least one area of interest \u0026ndash; these are called ‘T’ shaped engineers - engineers that have gone deep into two areas are even more valuable and are called ‘π’ shaped engineers. I’m advocating for creating projects (and classroom environments) in school that cultivate the same generalist / specialist mindset that is often expected in graduate school and professional lives. Art curriculums have long taught the core skills and ideas and then expected students to explore and expand upon their interests. Imagine how engaging education could be when all aspects of schools encouraged choice and exploration.\n Teaching this way can be uncomfortable for teachers who may traditionally have felt that they need to operate as the expert who knows everything. To model the idea, however, that you don’t have to know everything, it is actually helpful not to know everything. In fact, you cannot give students a quick answer, which cuts off their chance to think through the problem, and instead you explore with the students and model how to learn and resolve difficult problems. The teacher must simply understand the basics and vocabulary of the field to help students interpret what they find. Of course the teacher must also be comfortable modeling exploring the unknown with the kids.\n","date":1591023436,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1592319436,"objectID":"b1753ec699cf1f57f6ef94213d26782a","permalink":"https://btihen.github.io/post_edu/edgility_btihen_exploration/","publishdate":"2020-06-01T16:57:16+02:00","relpermalink":"/post_edu/edgility_btihen_exploration/","section":"post_edu","summary":"When students are trusted to explore and know that mistakes are ok, learning becomes fun and engaging. Exploration builds on student interests so they learn the basics naturally - and even specialize on aspects of particular interest to them.","tags":["exploration","trust","adventure","joy","engagement","student choice"],"title":"Exploration in the Classroom","type":"post_edu"},{"authors":["Bill Tihen"],"categories":["Website"],"content":"step 0: buy a domain name For these instructions use the (Namecheap)[https://www.namecheap.com/] service to buy your Domain.\nstep 1: point your domain name at: username.github.io (optional) This takes quite a steps and disables https (more steps follow to renable ssl). This article got me oriented: https://dev.to/rightfrombasics/connecting-namecheap-domain-with-github-pages-3nn6\n log into Namecheap On the left is a sidebar with Dashboard and the top. Click on the Domain List Find your domain name and click the manage button on the far right. Along the top click on Advanced DNS Add your A records to the DNS config. I typed: dig btihen.github.io (of course replace with your github website name) and got:  ; \u0026lt;\u0026lt;\u0026gt;\u0026gt; DiG 9.10.6 \u0026lt;\u0026lt;\u0026gt;\u0026gt; btihen.github.io ;; global options: +cmd ;; Got answer: ;; -\u0026gt;\u0026gt;HEADER\u0026lt;\u0026lt;- opcode: QUERY, status: NOERROR, id: 28239 ;; flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 1 ;; OPT PSEUDOSECTION: ; EDNS: version: 0, flags:; udp: 512 ;; QUESTION SECTION: ;btihen.github.io.\tIN\tA ;; ANSWER SECTION: btihen.github.io.\t3600\tIN\tA\t185.199.110.153 btihen.github.io.\t3600\tIN\tA\t185.199.109.153 btihen.github.io.\t3600\tIN\tA\t185.199.108.153 btihen.github.io.\t3600\tIN\tA\t185.199.111.153  So created the following A Records:\ntype Host Value TTL A Record @ 185.199.110.153 Automatic A Record @ 185.199.109.153 Automatic A Record @ 185.199.108.153 Automatic A Record @ 185.199.111.153 Automatic  Then I created a CNAME record:  type Host Value TTL CNAME Record www btihen.github.io Automatic  step 2: configure you github site to accept the domain You need to make a file called CNAME in the root of your username.github.io repo and it contents must be your new domain name.\nFor example I used:\ncd public touch CNAME echo 'btihen.me' \u0026gt;\u0026gt; CNAME git add . git commit -m 'accept the domain name: btihen.me' git push  step 3: stop and check NOW: http://your-domain-name.com should work\nstep 4: Free ssl for the domain following the advice from: https://dev.to/rightfrombasics/adding-ssl-to-your-site-free-1fa7\n create a cloudflare account. choose the dns feature allow cloudflare to scan your dns records (it should get the same results as when you do: dig username.github.io) Continue through the cloudflare process \u0026amp; cloudflare will eventually give you 2 nameservers to use. Now you can have cloudflare take over your dns \u0026ndash; log into Namecheap On the left is a sidebar with Dashboard and the top. Click on the Domain List Find your domain name and click the manage button on the far right. On the top bar choose Domain Find the Nameservers section Choose Custom DNS Add the tow servers given to you by Cloudflare and save. Go back to cloudflare and choose Full end to end encryption Choose Always Use HTTPS Save and click the Re-check now button.  Unfortunately, now you need to wait for a 1/2 hour or morefor the dns service to transfer from Namecheap to Cloudflare. Theoretically up to 48 hours (but a 1/2 hour is much more typical).\n","date":1590924168,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590924168,"objectID":"f6f89708790ce895e9556dfab42a6ed0","permalink":"https://btihen.github.io/post_tech/github_website_with_custom_domain/","publishdate":"2020-05-31T13:22:48+02:00","relpermalink":"/post_tech/github_website_with_custom_domain/","section":"post_tech","summary":"step 0: buy a domain name For these instructions use the (Namecheap)[https://www.namecheap.com/] service to buy your Domain.\nstep 1: point your domain name at: username.github.io (optional) This takes quite a steps and disables https (more steps follow to renable ssl).","tags":["website","ssl","domain","github","cloudflare","namecheap"],"title":"Github Website with a Custom Domain \u0026 SSL","type":"post_tech"},{"authors":["Bill Tihen"],"categories":["Education"],"content":"Basically a mix of having the kids build on their strengths, exploring the doing project based with and goal and within a context of the student\u0026rsquo;s choice. The project-work uses many agile processes*, one step outside their knowledge/comfort,\n Agility in this context means small-teams that work with small aspects of a bigger objective and build their knowledge / project iteratively and reflect (on demo suggestions (feedback) AND their own learning process) to inform the next iteration and enjoy the exploration of knowledge.  Teacher\u0026rsquo;s Responsibilities \u0026amp; Activities  UPLIFT BUILD SUCCESS AND CONFIDENCE \u0026ndash; I personally like to borrow from the concept of the Hero\u0026rsquo;s Journey - Help the student have a context and need to learn \u0026amp; apply knowledge to the point where they can SOLVE A COMPLEX CHALLENGE to meet the goal within the context of the learning objectives of the class (or unit). Uplifted Atmosphere - guide kids to encourage strengths   re-enforce activities that builds the student\u0026rsquo;s confidence and joy in learning re-direct distracting /destructive activities toward helpful actions exploration create an atmosphere where learning can be fun, meaningful and exploratory (like young kids) and not stressful and time-based  Natural Assessment \u0026amp; Motivation - whenever possible \u0026amp; allowed - I avoid grading, assessing and correcting students. Instead, I encourage nature assessments and motivation. For example, while building boats, have a pool and criteria for \u0026ldquo;tracking\u0026rdquo;, \u0026ldquo;load\u0026rdquo;, etc. and have the students test the boat in the pool - where everyone can see and test the qualities. To that end, I find it very helpful if the students work will be publicly viewed and seen by others - preferably with the students present to \u0026ldquo;show\u0026rdquo; their product \u0026amp; experience the pride (or embarrassment in their work). That\u0026rsquo;s often much more ownership than a grade. If a state or other external final exam like an AP test is part of the course \u0026ndash; then I suggest after covering the material in the project based way \u0026ndash; then spend the last part of the class doing practice exams until the students are comfortable with the exam aspects of the knowledge. This mixed approach has been very successful in teaching AP Computer Science (nearly all students received the top score 19 of 20 students). Teaching Activities - guide kids to learn the materials (rarely instruct)   guide students to other students who can help them help the students smallify their work to find something they can research \u0026amp; solve (the next doable step just beyond their skill-level) help the students with keywords, concepts and vocabulary to do the research for their next step help the students understand and interpret their research they found but don\u0026rsquo;t fully understand help the students apply their research they\u0026rsquo;ve understood conceptually, but unsure how to implement  Student\u0026rsquo;s Responsibilities \u0026amp; Activities  Choice - of goals and context within the context of the learning objectives of the class (or unit). For example to teach middle school students 3-D Analytical Geometry \u0026amp; Fluid Dynamics - students create companies and design a boat of their choice (and print versions of it as they refine it). Each boat will need a specialty with a specialty (stability, comfort for people, speed, tracking, efficiency, load, \u0026hellip;) and can overcome some adversity (wind, waves, currents, \u0026hellip;) Context - students need to create a context they own for their chosen goal. This means creating a story (an explanation / real or imagined) for the importance of their chosen goal. For example when teaching Earth Sciences students could choose to make an Earthquake alarm system to help people in stay safe. To that end they also have to consider the consequences of their system if people rely on it - and choose at least one failure condition they can mitigate. Natural Assessment - Students need to learn to take ownership for tracking their own knowledge, resources and quality. To that end, I avoid personally telling them what to correct, instead they need to get peer-reviews, do demos and get feedback from others and assess their work against their stated goals. To that end I almost always require a public display of their work with them present. Either a presentation or demos where people come by and they demo / explain their work. I also have them practice within the class with each other - where they can see the quality and ideas of others with enough time to adjust their own work to meet their own standards or pride and avoid a sense of embarrassment (or not). Demos \u0026amp; Constructive Feedback - ideally I have the kids have a project journal and demo notes and reflections need to be recorded   Demos are IMPORTANT - putting students in the learners driver seat. Students need to learn to get / ask for (pull) their feedback to assess and adjust the quality and progress of their work (with help from the Natural Assessment as a reality check \u0026ndash; not the teacher - \u0026lsquo;What does the water say?') Students must learn to give \u0026amp; hear \u0026amp; accept feedback in their work. To that end there are 4 rules to make this work - with more experience these can be loosened some:  plan what and how to present the demo (\u0026amp; what the feedback might be - both likes and changes) present the demo \u0026amp; receiving feedback - listen \u0026amp; take notes (no challenges - keep it safe to give feedback, further explanations or clarifications of misunderstandings - simply note ones reaction and reflect on how to improve the demo - theres no problem with doing a second demo with another group if the first group didn\u0026rsquo;t understand). Giving Feedback - includes two aspects:   what is liked and how that matches what is understood about the group\u0026rsquo;s goals what they think would make the work even better (if something should change then is needs to be worded as - \u0026ldquo;I like this \u0026lsquo;pointy bow\u0026rsquo; and think it would be even better with a rounded bow\u0026rdquo;) - constructive and positive feedback (this takes practice \u0026ndash; kids (and teachers) are not well versed in \u0026ldquo;Pixar\u0026rsquo;s yes and \u0026hellip;\u0026quot; feedback process  using a suggestion each project must accept at least ONE suggestion from another group (and credit them) and explain how they made the suggestion their own and integrated it into the project. Without this - they cannot submit the project (its incomplete)!    Exploration - kids should learn to enjoy learning   DO VERY little direct instruction (if any) - have the kids explore until they get a bit stuck (but don\u0026rsquo;t make them beg for help, just be patient and help them get unstuck - DON\u0026rsquo;T TELL THEM SOLUTIONS) learning need to change (as much as possible) from an external \u0026ldquo;death march\u0026rdquo; pushed by the curriculum, but instead turned into a lean pull system by the students own needs, interests and desire to fulfill their own chosen goals within their chosen context. ideally students track what they research and learn in the project journal. Then all kids on the team have access to all the info (\u0026amp; is responsible to know what is known by others on the team - that is the homework - to know what others have done and be aware and understand it). Occasionally, I look at the journal and ask other kids in the group to explain what another has researched and if the kids doesn\u0026rsquo;t know the material then the \u0026lsquo;researcher\u0026rsquo; is responsible to ensure the others on team \u0026lsquo;catch up\u0026rsquo;  Path - The Hero\u0026rsquo;s Journey \u0026amp; Smallify - initially students are unfamilier with solving big complex problems without one clear \u0026lsquo;Googable\u0026rsquo; answer   smallify - students need to learn to find the next workable step just beyond their knowledge \u0026ndash; but doable (initially kids need help with this!) small enough - where its easy to have false starts, make lots of changes and explore and after feedback \u0026ndash; make changes without being upset at the invested time. Small enough means that it is fun to explore and make changes! Hero\u0026rsquo;s Journey - each project needs to involve complexity (that has no one right solution) but involves a complex compromise to arrive at one\u0026rsquo;s goals. This helps the students really learn the depth of the material and the compromises needed to accomplish their goals. (there have been recent studies showing that people only fully understand a topic and its related implications when they go through process of exploring complex compromises)  Reflection \u0026amp; Change   another form of reflection - done ideally daily, they asses their progress (initially I like to review their burn-down on their way out at the end of class with them and help them reflect on and verbalize what skills they are using to make progress \u0026amp; contemplate if its possible to build even more on those strengths and to reflect on whats hinder them (\u0026amp; see if they can replace that activity with something more helpful). Over time I like to encourage the kid to just update me their progress and reflections on their way out of class. students need to get regular feedback on each phase of their work (ideally at least weekly) \u0026amp; at some point each group\u0026rsquo;s project must have at least on change inspired by feedback from another group or individual outside their group - and credit that person / group. Even if \u0026amp; in-fact ideally - they take the idea and adapt it to their needs needs and goals.  ","date":1590326205,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590326205,"objectID":"912cc76cee3a14100a7070238e98e326","permalink":"https://btihen.github.io/post_edu/explore_uplift_reflect/","publishdate":"2020-05-24T15:16:45+02:00","relpermalink":"/post_edu/explore_uplift_reflect/","section":"post_edu","summary":"There are a few keys to engaging students while learning and enjoying their own worth as a person and learner.  While learning required materials -- within a context important to the student.","tags":["agile","explore","choice","differentiated","reflect","retrospective","uplift"],"title":"Explore, Uplift and Reflect","type":"post_edu"},{"authors":["Bill Tihen"],"categories":["code"],"content":"From the Academic Documentation https://sourcethemes.com/academic/docs/managing-content\nCreate a User hugo new --kind authors authors/firstname_lastname  add person\u0026rsquo;s image (png or jpg)\ncp picture.jpg content/authors/firstname_lastname/avatar.jpg  Create a Blog hugo new --kind post post/blog_title  images within the article - add images to the article folder:\ncp image.jpg content/post/blog_title/article_image.jpg  and add it to the content using: ![kanban](example.jpg) within the article\nadd a display image (png or jpg)\ncp picture.jpg content/post/blog_title/featured.jpg  Add a Publication Reference hugo new --kind publication publication/publication_title  add a display image (png or jpg)\ncp picture.jpg content/publication/publication_title/featured.jpg  add a pdf (with the same name as the folder) and it will be automatically available\ncp picture.pdf content/publication/publication_title/publication_title.pdf  Create a Project hugo new --kind project project/project_name  add a display image (png or jpg)\ncp picture.jpg content/project/project_name/featured.jpg  Create a Talk hugo new --kind talk talk/my-talk-name  Talk Slides are a bit more complicated see: https://sourcethemes.com/academic/docs/managing-content/#create-slides\nCourse (Documentation) This is tricky (copy and rename an existing course and adapt it)\ncourses can be renamed and can have multiple folders (courses) within it.\nNOTE: the algebra_1 folder cannot have any sub-folders. Within an actual course all materials must be within a FLAT hierarchy.\n","date":1590223161,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590223161,"objectID":"619cd1802c4d918a125f8cdca8c34b47","permalink":"https://btihen.github.io/post_tech/hugo_academic_cheatsheet/","publishdate":"2020-05-23T10:39:21+02:00","relpermalink":"/post_tech/hugo_academic_cheatsheet/","section":"post_tech","summary":"A quick summary of the Hugo Academic Theme creation commands","tags":["Hugo","Static Site","git","Academic Theme","commands"],"title":"Hugo Academic Content Commands","type":"post_tech"},{"authors":["Bill Tihen"],"categories":["code"],"content":"step 0: install hugo brew install hugo  step 1: create a public username_website repo I\u0026rsquo;ll assume your github account is username I think this repo needs to be publicly readable (not 100% sure)\nstep 2: clone the academic hugo locally git clone https://github.com/sourcethemes/academic-kickstart.git username_website cd academic_website git submodule update --init --recursive # without this the site won't start correctly  be sure you have many files within: themes/academic\nstep 3: Update .gitignore \u0026amp; public folder  update .gitignore remove the line with public be sure there is no public folder (yet), if there is remove it and all its contents.  step 4: point this repo to your username_website repo I have found the easiest way to overwrite the source origin repo is to do this by hand.\nCurrently your .git/config file will currently look like (notice the url referencing: git://github.com/sourcethemes/academic-kickstart.git - this is what we need to update):\n[core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true [remote \u0026quot;origin\u0026quot;] url = git://github.com/sourcethemes/academic-kickstart.git fetch = +refs/heads/*:refs/remotes/origin/* [branch \u0026quot;master\u0026quot;] remote = origin merge = refs/heads/master  change the origin url by hand or by using sed:\nsed -i.bak -e 's/https:\\/\\/github.com\\/sourcethemes\\/academic-kickstart.git/git@github.com:username\\/username_website.git/' .git/config  when your .git/config file is correct it will look like:\n[core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true [remote \u0026quot;origin\u0026quot;] url = git@github.com:username/username_website.git fetch = +refs/heads/*:refs/remotes/origin/* [branch \u0026quot;master\u0026quot;] remote = origin merge = refs/heads/master  now you can push this local repo to your github repo using:\ngit push -u origin --all # git init # git add . # git commit -m \u0026quot;Initial commit\u0026quot; # git push -u origin master  step 5: configure website basics 5A: Set your site name: in config/_default/config.toml\nfind the title attribute and set it to username (or whatever is appropriate)\n5B: Pick a themes from https://sourcethemes.com/academic/themes/\nin config/_default/config.toml\nfind the theme attribute and set it to your favorite theme color (or leave it as is)\n5C: site logo \u0026amp; favicon Put your image files into assets/images:\n logo.png (the logo on your webpage) file and icon.png (the favicon - icon in the webtab)  You can go to https://www.namecheap.com/logo-maker and make a logo\n5D: menu items in config/_default/menus.toml\nremove any items you won\u0026rsquo;t use. In my case this file now looks like:\n[[main]] name = \u0026quot;Posts\u0026quot; url = \u0026quot;#posts\u0026quot; weight = 20 [[main]] name = \u0026quot;About\u0026quot; url = \u0026quot;#about\u0026quot; weight = 50 [[main]] name = \u0026quot;Contact\u0026quot; url = \u0026quot;#contact\u0026quot; weight = 60  These will also be the sections on the home page that will be enabled and configured.\nThe larger the weight the further to the right the item will be shown.\nstep 6: configure site parameters You may want to read through all the params - but the ones listed here are enough to get started.\n site_type \u0026ndash; in the file: config/_default/params.toml: be sure to configure the site_type variable configure \u0026lsquo;contact details\u0026rsquo;  if you choose not to add an email, then be sure to set the variable email_form=0 on the content/home/contact.md file! if you choose not to enter an address and coordinates the in the [map] section set the engine=0 to avoid problems.   configure social details \u0026ndash; optional Regional Settings \u0026ndash; NOTE: The date display settings seems to have a bug \u0026ndash; so I don\u0026rsquo;t recommend adjusting that.  step 7: configure your homepage At this point I suggest starting hugo server so you can watch your edits.\nNow go into the folder content/home and we will adjust or disable the files in this folder.\n  disable with: active=false\n  enable with: active=true\n  oder with: weight=20 the bigger the number the further down on the page is show (I suggest you use the same weights used in the menu)\n  contact.md - review and see if changes are desired.\n  accomplishments.md - (and all other home page sections you decide not to display) change active=true to active=false\n  7A: about page I prefer to use the about page when it is a person\u0026rsquo;s site and the people page when the site is about a group effort. So in this case:\nhugo new --kind authors authors/author_name  content/home/about.md\n change the title to whatever you like: biography, about, etc\u0026hellip; change the variable author to match the name you used to generate you profile above, ie:  author = \u0026quot;author_name\u0026quot;  content/authors/author_name/_index.md\n Adjust the file so the information is accurate below the --- toward the end of the file, add your own free text to the about page.  content/authors/author_name/avatar.jpeg (png, jpg, etc also work)\n add an attractive image to the folder content/authors/author_name/ and name it: avatar.jpg  7B: people (or Team) page disable content/home/about.md\n Mark the active variable as false:  active=false  enable content/home/people.md\n set active=true create sub-group names:  [content] user_groups = [\u0026quot;Educators\u0026quot;, \u0026quot;Researchers\u0026quot;]  or alternatively, use an empty string to create a team without sub-teams:\n[content] user_groups = [\u0026quot;\u0026quot;]  Create the people (authors)\nhugo new --kind authors authors/person_name  content/authors/person_name/_index.md\n add one (or more) user_group to the person\u0026rsquo;s profile using the user_groups variable:  user_groups = [\u0026quot;Educators\u0026quot;]  if you used an empty string in people.md add:\nuser_groups = [\u0026quot;\u0026quot;]   Edit this file so that the information is accurate below the --- toward the end of the file, add your own free text to the about page.  content/authors/person_name/avatar.jpeg (png, jpg, etc also work)\n add an attractive image to the folder content/authors/person_name/ and name it: avatar.jpg  step 8: Test publish to username.github.io When you site is good enough to publish then its time to follow the following steps (these MUST be done in order to prevent problems!)\n8A: public folder (non-existent) The first time you do setup for publishing it is important this folder doesn\u0026rsquo;t exist yet and that public isn\u0026rsquo;t listed in the .gitignore` file\n8B: git snapshot (DO NOT YET GENERATE your website)\nCreate your git snapshot (very important at this point since the next steps are tricky)\ngit add . git commit -m \u0026quot;First draft of homepage\u0026quot; git push  8C: make second github repo username.github.io Now make a second public repo (CLICK THE BOX TO INCLUDE A README and/or a LISENCE file!) on github called username.github.io, this MUST be exactly: username.github.io for this to work!\nDouble check your repo is not empty, but has a README and/or a LISENCE file.\nNOW go to github repo settings and click on manage access and be sure you have permission to at administer (or at least write to this repo) \u0026ndash; probably not so click the invite teams or people button and add yourself as an admin (an other as needed).\n8D: clone username.github.io to public (within your Hugo project) now go back into your website code (root folder) and type:\ngit clone https://github.com/username/username.github.io.git public  if you see: warning: You appear to have cloned an empty repository. \u0026ndash; go back to the repo and create a README file!\n8E: check your permissions enter you public folder and create an index.html file and put in very simple html code: \u0026lt;h1\u0026gt;Hello username.github.io\u0026lt;/h1\u0026gt;\ncd public touch index.html echo '\u0026lt;h1\u0026gt;Hello username.github.io\u0026lt;/h1\u0026gt;' \u0026gt;\u0026gt; index.html  now check this in and push it to github.\ngit add . git commit -m \u0026quot;test webpage\u0026quot; git push  At this point you should see a bunch of message and toward the end you should see a line with:\nTo github.com:username/username.github.io.git  If instead you get the error:\nremote: Permission to peakchallenges/peakchallenges.github.io.git denied to btihen. fatal: unable to access 'https://github.com/peakchallenges/peakchallenges.github.io.git/': The requested URL returned error: 403  go back and check your site permissions.\nIf site permissions aren\u0026rsquo;t a problem do the following:\nre-create your website repo username.github.io.git outside the webcode project.\ngit clone git@github.com:username/username.github.io.git cd username.github.io echo '\u0026lt;h1\u0026gt;Hello username.github.io - v1\u0026lt;/h1\u0026gt;' \u0026gt;\u0026gt; index.html git add index.html git commit -m \u0026quot;update readme and test permissions\u0026quot; git push  assuming this works then move this repo into the hugo repo:\nrm -rf username_website/public mv username.github.io username_website/public cd username_website/public echo '\u0026lt;h1\u0026gt;Hello username.github.io - v2\u0026lt;/h1\u0026gt;' \u0026gt;\u0026gt; index.html git commit -am \u0026quot;update readme and test permissions within hugo project\u0026quot; git push  8F: check the website Wait a few minutes and go to the website https://username.github.io and be sure you see your newly published html page.\nstep 9: configure public as a submodule Now add the username.github.io repo as a submodule to your website code repo using. This allows nested projects without confusing git.\nFirst be sure you are in the hugo root and not the public folder and type:\ncd public git submodule add -b master https://github.com/username/username.github.io.git public`  now in .git/modules you might see a folder called public (with a bunch of stuff in it) if not simply edit your .git/config so that after:\n[submodule \u0026quot;themes/academic\u0026quot;] path = themes/academic url = https://github.com/gcushen/hugo-academic.git  you see:\n[submodule \u0026quot;public\u0026quot;] path = public url = https://github.com/username/username.github.io.git branch = master  You can add it by hand or with:\ncat \u0026lt;\u0026lt;\u0026quot;EOF\u0026quot; \u0026gt;\u0026gt; git/config [submodule \u0026quot;public\u0026quot;] path = public url = https://github.com/username/username.github.io.git branch = master EOF  step 10: publish your new Hugo webpage: Now to publish the Hugo site you prepared do the following:\nhugo -d public cd public git add . git commit -m \u0026quot;first webpage content\u0026quot; git push # toward the end you should see: `To github.com:username/username.github.io.git` cd ..  Follow this proceedure every time you update your site.\nNOTE: BE SURE NOT TO delete the folder public/.git/ or you will need to reconfigure your public submodule.\nnow go back to https://username.github.io and you should see your hugo site!\n(This might take a few minutes \u0026ndash; up to a half-hour \u0026ndash; to publish)\n","date":1589618361,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590223161,"objectID":"1f82a1473eb178acbf4c24d93cf6b5f2","permalink":"https://btihen.github.io/post_tech/hugo_academic_website_steps/","publishdate":"2020-05-16T10:39:21+02:00","relpermalink":"/post_tech/hugo_academic_website_steps/","section":"post_tech","summary":"hugo web (with the Academic Theme) and using git submodules and github to publish a free website","tags":["Hugo","Static Site","git","submodules"],"title":"Hugo Website using Github","type":"post_tech"},{"authors":["Bill Tihen"],"categories":["Code"],"content":"Intro It is often helpful to be able to test email sending from an application during development or testing (or even to make testing emails on a staging server possible).\nTo do this follow these instructions for a safe convenient way to test and inspect emails sent from an application.\nSETUP First we need to get the repo (or at least the docker file)\n# get the mailcatcher repo git clone git@github.com:sj26/mailcatcher.git # go into mailcather repo cd mailcatcher # configure to use the newest `released` gem version of mailcatcher sed -i.bu1 's/FROM ruby:2.5/FROM ruby:2.6/' Dockerfile sed -i.bu2 's/ARG VERSION=0.6.5/ARG VERSION=0.7.1/' Dockerfile  The Dockerfile should now look like (which is actually all that is actually needed):\nFROM ruby:2.6 MAINTAINER Samuel Cochran \u0026lt;sj26@sj26.com\u0026gt; ARG VERSION=0.7.1 RUN gem install mailcatcher -v $VERSION EXPOSE 1025 1080 ENTRYPOINT [\u0026quot;mailcatcher\u0026quot;, \u0026quot;--foreground\u0026quot;] CMD [\u0026quot;--ip\u0026quot;, \u0026quot;0.0.0.0\u0026quot;]  BUILD IMAGE Now you can download the docker image and install the gems into it with:\n# -t adds repository:tag info -- the '.' at the end is important: docker build -t btihen/ruby/mailcatcher:ruby_2.6 . # ... # should end with something like # Successfully built 21e0de2bdd68 # now tag it as the **lasted** image with: docker build -t btihen/ruby/mailcatcher:latest .  now you can see your list of docker images (you should see the starting image/container we just created):\ndocker images REPOSITORY TAG IMAGE ID CREATED SIZE btihen/ruby/mailcatcher latest 21e0de2bdd68 8 minutes ago 870MB btihen/ruby/mailcatcher ruby_2.6 21e0de2bdd68 8 minutes ago 870MB ruby 2.6 a98425292e84 2 weeks ago 843MB  BUILD CONTAINER Now start the docker image using the build image id (-d allows it to run in the backgroud, -p 1025:1025 -p 1080:1080 opens a connection on ports 1025 \u0026amp; 1080 from localhost to the docker image):\n# build a container so we can test our image docker run -d -p 1025:1025 -p 1080:1080 --name mailcatcher btihen/ruby/mailcatcher:latest # or if you like ids better docker run -d -p 1025:1025 -p 1080:1080 --name mailcatcher 21e0de2bdd68 # if you forgot the image-id you can list the images with: docker images  TESTING (http \u0026amp; smtp) now you should be able to go to http://localhost:1080 and see the mailcatcher webpage.\nnow lets test the smtp side from the cli using these instructions: https://www.shellhacks.com/send-email-smtp-server-command-line/\n# connect to the mail server $ telnet localhost 1025 # or $ telnet 127.0.0.1 1025 220 smtp.domain.ext ESMTP Sendmail ?version-number?; ?date+time+gmtoffset? # declare yourself (IP or DNS) \u0026gt; HELO local.domain.name 250 smtp.domain.ext Hello local.domain.name [xxx.xxx.xxx.xxx], pleased to meet you # declare who the email is from: \u0026gt; MAIL FROM: test@local.domain.name 250 2.1.0 sender@adress.ext... Sender ok # declare who should get the email: \u0026gt; RCPT TO: recipient@adress.ext 250 2.1.5 recipient@adress.ext... Recipient ok # setup the DATA transmission: \u0026gt; DATA 354 Enter mail, end with \u0026quot;.\u0026quot; on a line by itself # type a subject two returns and a message ending with '.' (on its own line): SUBJECT: Test message Hello, this is a TEST message, please don't reply. Thank you. . # end the connection \u0026gt; QUIT  Now check the mail has arrived in mailcatcher at localhost:1080\nAssuming you see the email sent - you can be sure your image \u0026amp; container is setup properly.\nSTOPPING (exited) CONTAINER When we are done with mailcatcher we can stop the docker process:\ndocker ps -a docker kill mailcatcher  STARTING BUILT (but exited) CONTAINERS To restart mailcatcher at a later date simply type:\ndocker start mailcatcher\nSHARING IMAGES (once they work) # login to the Azure Container Repository docker login btihen -u username -p xxxxxxxxxxx # upload the new image docker push btihen/ruby/mailcatcher  RETRIEVING SHARED IMAGE az acr login --name username az acr repository list --name username --output table # getting the image docker pull btihen/ruby/image_name  containerize the image\n# these are the default local ports - adjust to your needs docker run -d -p 1025:1025 -p 1080:1080 --name mailcatcher btihen/ruby/mailcatcher:latest  start the container\ndocker start mailcatcher  LISTING Repo IMAGES One-time install\n# if needed install the azure cli brew update \u0026amp;\u0026amp; brew install azure-cli # the following may also be needed: brew update \u0026amp;\u0026amp; brew install python3 \u0026amp;\u0026amp; brew upgrade python3 brew link --overwrite python3  Retrieve the image list\n# login with the azure-cli az acr login --name username # list the images az acr repository list --name username --output table  REMOVING CONTAINERS when we no longer need mailcatcher we can remove it with (-a lists running and stopped containers):\ndocker ps -a docker rm mailcatcher  REMOVING IMAGES To fully clean up and remove (images \u0026ndash; after the containers are removed):\n$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE btihen/ruby/mailcatcher ruby_2.5 21e0de2bdd68 25 minutes ago 870MB ruby 2.5 a98425292e84 2 weeks ago 843MB $ docker image rm 21e0de2bdd68 $ docker images REPOSITORY TAG IMAGE ID CREATED SIZE ruby 2.5 a98425292e84 2 weeks ago 843MB  ","date":1589311149,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590261549,"objectID":"0f074938edcc83630f278a4e0a6165ee","permalink":"https://btihen.github.io/post_tech/docker_intro_with_mail_catcher/","publishdate":"2020-05-12T21:19:09+02:00","relpermalink":"/post_tech/docker_intro_with_mail_catcher/","section":"post_tech","summary":"Learn to set-up mail catcher for safe email testing with an introduction to Docker","tags":["Docker","email","Testing"],"title":"Docker Intro using MailCatcher","type":"post_tech"},{"authors":["Bill Tihen"],"categories":["Code"],"content":"I have been watching Phoenix and Elixir for a while, and the idea of writing dynamic Web Applications without needing a ton of JavaScript is very interesting. I recently saw this video by Chris McCord:\n https://www.youtube.com/watch?v=MZvmYaFkNJI\u0026amp;feature=youtu.be  which is very cool. I wanted to learn more and found this Phoenix 1.4 tutorial:\n https://www.youtube.com/watch?v=2bipVjOcvdI https://dennisbeatty.com/2019/03/19/how-to-create-a-counter-with-phoenix-live-view.html  and decided to translate that into Phoenix 1.5. This is what follows.\nNOTE: Since I am just learning the Phoenix Framework and will need to refer to this for my self to remember how to do basic things \u0026ndash; I\u0026rsquo;ve documented every little detail.\nStep 0 - setup environment Setup environment \u0026amp; newest version of elixir:\nexenv install 1.10.3 exenv global exenv local 1.10.3  Install the 1.5.1 phx_new generator:\nmix archive.install hex phx_new 1.5.1\nStep 1: Create a Phoenix Project with LiveView Create the project (notice the --live - that enables LiveView, --no-ecto - keeps the project smaller since we won\u0026rsquo;t be persisting any data):\nmix phx.new counter --no-ecto --live\nenter project and create init commit:\ncd counter git init \u0026amp;\u0026amp; git add -A \u0026amp;\u0026amp; git commit -m \u0026quot;init\u0026quot;  Step 2 - simple counter page using LiveView Make a counter_live folder \u0026amp; an index.ex file:\nmkdir lib/counter_web/live/counter_live touch lib/counter_web/live/counter_live/index.ex  Add the following contents: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  # lib/counter_web/live/counter_live/index.ex defmodule CounterWeb.CounterLive.Index do use CounterWeb, :live_view # since we don\u0026#39;t have a db to pull from we initialize on mount @impl true def mount(_params, _session, socket) do {:ok, assign(socket, :val, 0)} end def render(assigns) do ~L\u0026#34;\u0026#34;\u0026#34; \u0026lt;h1\u0026gt;Live Counter\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;Here is a great complex page\u0026lt;/b\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h2\u0026gt;The count is: \u0026lt;%= @val %\u0026gt;\u0026lt;/h2\u0026gt; \u0026lt;button phx-click=\u0026#34;dec\u0026#34;\u0026gt;-\u0026lt;/button\u0026gt; \u0026lt;button phx-click=\u0026#34;inc\u0026#34;\u0026gt;+\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button phx-click=\u0026#34;clear\u0026#34;\u0026gt;clear\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;p\u0026gt; \u0026lt;i\u0026gt;even more awesome content\u0026lt;/i\u0026gt; \u0026lt;/p\u0026gt; \u0026#34;\u0026#34;\u0026#34; end # event handler for \u0026lt;button phx-click=\u0026#34;inc\u0026#34;\u0026gt; def handle_event(\u0026#34;inc\u0026#34;, _, socket) do {:noreply, update(socket, :val, \u0026amp;(\u0026amp;1 + 1))} end # event handler for \u0026lt;button phx-click=\u0026#34;dec\u0026#34;\u0026gt; def handle_event(\u0026#34;dec\u0026#34;, _, socket) do {:noreply, update(socket, :val, \u0026amp;(\u0026amp;1 - 1))} end # event handler for \u0026lt;button phx-click=\u0026#34;clear\u0026#34;\u0026gt; def handle_event(\u0026#34;clear\u0026#34;, _, socket) do {:noreply, update(socket, :val, \u0026amp;(\u0026amp;1 - \u0026amp;1))} # {:noreply, update(socket, :val, 0)} # very slow - why? end end  \nNow update the routers (so we can get to the new webpage \u0026ndash; now our app should work: 1 2 3 4 5 6  scope \u0026#34;/\u0026#34;, CounterWeb do pipe_through :browser # live \u0026#34;/\u0026#34;, PageLive, :index # remove this line live \u0026#34;/\u0026#34;, CounterLive.Index, :index # add this line end  \nStart pheonix:\nmix phx.server\nGo to:\nlocalhost:4000\nYou should now see the website and the counter should function\nAssuming all is good, I\u0026rsquo;ll take a git snapshot:\ngit add . git commit -m \u0026quot;counter with live update\u0026quot;  Step 3 - Running tests In order to run the tests we type:\nmix test  We see that PageLive test fails. This is because we replaced this behavior with CounterLive\nTo fix this we will create a CounterLive test and delete PageLive test.\nrm test/counter_web/live/page_live_text.exs touch test/counter_web/live/counter_live_text.exs  Here is the code for our new test: it basically just checks to be sure our Title is on the page: 1 2 3 4 5 6 7 8 9 10 11 12 13  # test/counter_web/live/counter_live_text.exs defmodule CounterWeb.CounterLiveTest do use CounterWeb.ConnCase import CounterWeb.CounterLive.Index test \u0026#34;disconnected and connected render\u0026#34;, %{conn: conn} do {:ok, page_live, disconnected_html} = live(conn, \u0026#34;/\u0026#34;) assert disconnected_html =~ \u0026#34;Live Counter\u0026#34; assert render(page_live) =~ \u0026#34;Live Counter\u0026#34; end end  \nNow we can test again: mix test\nNow that works, lets take another git snapshot:\ngit add . git commit -m \u0026quot;counter with live update\u0026quot;  Step 4 \u0026ndash; LiveView Templates Create a template file (helpful for complex html pages, but simple to create):\ntouch lib/counter_web/live/counter_live/index.html.leex\nNow just copy the html (from the render method into this file):\n# lib/counter_web/live/counter_live/index.html.leex \u0026lt;h1\u0026gt;Live Counter\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;Here is a great complex page\u0026lt;/b\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h2\u0026gt;The count is: \u0026lt;%= @val %\u0026gt;\u0026lt;/h2\u0026gt; \u0026lt;button phx-click=\u0026#34;dec\u0026#34;\u0026gt;-\u0026lt;/button\u0026gt; \u0026lt;button phx-click=\u0026#34;inc\u0026#34;\u0026gt;+\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button phx-click=\u0026#34;clear\u0026#34;\u0026gt;clear\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;p\u0026gt; \u0026lt;i\u0026gt;even more awesome content\u0026lt;/i\u0026gt; \u0026lt;/p\u0026gt; Now point lib/counter_web/live/counter_live/index.ex to this file by replacing render with an apply command:\n1 2 3 4 5 6 7 8 9 10  # add this new function defp apply_action(socket, :index, _params) do socket end # remove this funtion # def render(assigns) do # ~L\u0026#34;\u0026#34;\u0026#34; # ... # \u0026#34;\u0026#34;\u0026#34; # end   NOTE: apply_action understands the rest verbs such as :new, :show etc.\nNow try the app again and it should still work!\nAssuming it still works, I\u0026rsquo;ll take another git snapshot:\ngit add . git commit -m \u0026quot;counter using a template\u0026quot;  Step 5 - Reusable Components (\u0026amp; isolation) This allows complex components to be reused within multiple templates and isolation to keep one\u0026rsquo;s mental scope minimal.\nCreate a file for the component:\ntouch lib/counter_web/live/counter_live/counter_component.ex\nMove the dynamic html and it\u0026rsquo;s associated functions into this file, it\u0026rsquo;s important to import the live_components into this file using:\nuse CounterWeb, :live_component\nIn order to encapsulate the events into the component we will also move the event handlers into the component file.\nSo this file will now look like: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  # lib/counter_web/live/counter_live/counter_component.ex defmodule CounterWeb.CounterLive.CounterComponent do use CounterWeb, :live_component def render(assigns) do ~L\u0026#34;\u0026#34;\u0026#34; \u0026lt;div\u0026gt; \u0026lt;h2\u0026gt;The count is: \u0026lt;%= @val %\u0026gt;\u0026lt;/h2\u0026gt; \u0026lt;button phx-click=\u0026#34;dec\u0026#34; phx-target=\u0026#34;\u0026lt;%= @myself %\u0026gt;\u0026#34;\u0026gt;-\u0026lt;/button\u0026gt; \u0026lt;button phx-click=\u0026#34;inc\u0026#34; phx-target=\u0026#34;\u0026lt;%= @myself %\u0026gt;\u0026#34;\u0026gt;+\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button phx-click=\u0026#34;clear\u0026#34; phx-target=\u0026#34;\u0026lt;%= @myself %\u0026gt;\u0026#34;\u0026gt;clear\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026#34;\u0026#34;\u0026#34; end def handle_event(\u0026#34;inc\u0026#34;, _, socket) do {:noreply, update(socket, :val, \u0026amp;(\u0026amp;1 + 1))} end def handle_event(\u0026#34;dec\u0026#34;, _, socket) do {:noreply, update(socket, :val, \u0026amp;(\u0026amp;1 - 1))} end def handle_event(\u0026#34;clear\u0026#34;, _, socket) do # {:noreply, update(socket, :val, 0)} # very slow - why? {:noreply, update(socket, :val, \u0026amp;(\u0026amp;1 - \u0026amp;1))} end end  \nNotice the button tags are slightly more complex\n\u0026lt;button phx-click=\u0026quot;dec\u0026quot; phx-target=\u0026quot;\u0026lt;%= @myself %\u0026gt;\u0026quot;\u0026gt;\nthe @myself basically informs the event that the handler is within the component.\nNow update the live template to point at the component using:\n\u0026lt;%= live_component @socket, CounterWeb.CounterLive.CounterComponent, id: 0, val: @val %\u0026gt;\nAlso note we need to pass the @val value into the component using:\nid: 0, val: @val\nits a little wierd, but we need to pass an id even if there is no ecto backed record.\nNow the template file looks like a normal template file again (focused on formating):\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  # lib/counter_web/live/counter_live/index.ex defmodule CounterWeb.CounterLive.Index do use CounterWeb, :live_view # since we don\u0026#39;t have a db to pull from we initialize on mount @impl true def mount(_params, _session, socket) do {:ok, assign(socket, :val, 0)} end def render(assigns) do ~L\u0026#34;\u0026#34;\u0026#34; \u0026lt;h1\u0026gt;Live Counter\u0026lt;/h1\u0026gt; \u0026lt;p\u0026gt; \u0026lt;b\u0026gt;Here is a great complex page\u0026lt;/b\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;%= live_component @socket, CounterWeb.CounterLive.CounterComponent, id: 0, val: @val %\u0026gt; \u0026lt;p\u0026gt; \u0026lt;i\u0026gt;even more awesome content\u0026lt;/i\u0026gt; \u0026lt;/p\u0026gt; \u0026#34;\u0026#34;\u0026#34; end end   Lets check that this still works.\nAssuming it still works, I\u0026rsquo;ll make one last git snapshot:\ngit add . git commit -m \u0026quot;live pages using isolated components - like JS does\u0026quot;  ","date":1589122913,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589122913,"objectID":"7f01d28a66b59e7ec8ae57f0f1e0ce0f","permalink":"https://btihen.github.io/post_tech/phoenix_1_5_live_view_basics/","publishdate":"2020-05-10T17:01:53+02:00","relpermalink":"/post_tech/phoenix_1_5_live_view_basics/","section":"post_tech","summary":"Create a simple web counter app to learn how Phoenix 1.5 LiveView works.  Phoenix LiveView allows dynamic webpages with fast update times -- without JavaScript.","tags":["Elixir","Phoenix","LiveView","PubSub","Interactive"],"title":"Phoenix 1.5 LiveView \u0026 PubSub Basics","type":"post_tech"},{"authors":["Bill Tihen","Elliott Hebert"],"categories":["Agile","Education"],"content":"Intro Kanban is a visual way to track your tasks and your progress. Many people find this helpful way to to show yourself, your parents and teachers what work needs to be done. Ideally, this is done on a large screen, sheet of paper, or whiteboard - so that it is obvious and easily seen as a reminder.\nStatus Tracking The simplest statuses would be: To-Do, Doing, Done\n-- Some teacher often require a draft Review before final submissions, engineers use a similar column Review or Demo. Generally, this is a good idea to check your work with peers, parents or your teacher before handing in your work \u0026ndash; so we suggest a Review column before done. So now the statuses would be:\nTo-Do, Doing, Review, Done\n-- Swim-lanes (tracking multiple classes / projects) Ideally when using this technique you keep the number of simultaneous tasks (WIP) to a minimum\n The number of simultaneous tasks is called work-in-progress or abbreviated as WIP\n Education, unfortunately, expects a lot of simultaneous tasks within a variety of classes. To address this we can use swim-lanes to track our priorities with a jumble of independent projects (classes). For example: we might have swim-lanes for: English, Mathematics, Science, \u0026hellip;\nIdeally, we will try only allow ONE task in your doing and review boxes for each swim-lane / class. (This is called a WIP Limit of 1).\nTasks Tasks Cards should have critical reminder information on them. Refrain from putting extra information on the card, the card should be clean and simple to read - it is a reminder of work to do NOT a full description of the assignment.\nHere is the critical information I include on a personal Kanban card.\n Title - Big bold text (upper left corner) Description - a very short reminder of what to do - ideally in 4 to 5 words Class - in case of confusion, I write the class / swim-lane (lower left corner) Due Date - Big bold Text (lower right corner) Start Date - use this to schedule small tasks of a large project - which can be used to slowly make progress on a large task (I call this smallifying). This is a very important skill to ensure continued progress on large projects in a timely way. I put this just above the Due Date  Here is an example of a Kanban in use with tasks:\nUsage I like to use A3 paper and small post-it notes to add tasks. Here is our recommended blank Kanban - where you can write in your classes. Put your most important classes (in the IB these would be your High Level courses) at the top. Use a timebox on long tasks that need to move forward, but are too big to do in one work session \u0026ndash; this is especially important when you have multiple tasks that need to be accomplished on a give day.\n Timebox - is a time limit that you won\u0026rsquo;t exceed for a given tasks in order to keep all tasks on schedule. We suggest 25 to 35 minute timeboxes with small 5 minute breaks between tasks. Every 4 timeboxes take a longer 15 minute break. This is called the pomodoro technique for full details.\n   To best use a Kanban board, you should follow the following ritual:\n Prioritize your work \u0026ndash; when you sit down to work, spend the first 5 minutes reviewing the Kanban board:   First assess what in the priority classes needs to be done in order meet assignment deadlines (for long tasks set a timebox so you make progress but can keep all your other tasks moving too) Second assess what needs to be started in priority classes to stay on track with larger projects. If you already have a task in that classes doing box then schedule that task to be done ASAP so that you can start the next task. This is important a common Kanban saying is:_ **START FINISHING TASKS, stop starting unfinished tasks!**   Do your work \u0026ndash; respect your priorities and your timeboxes!\n  UPDATE YOUR KANBAN - End five to ten minutes before your time is up (set an alarm if needed) and update your tasks to their new status boxes. If you couldn\u0026rsquo;t meet your goals for a task put a smaller colorful post-it on it - as an ALERT.\n  Address the needs of problem tasks \u0026ndash; for all tasks with an ALERT: write emails to get help, or make notes on research needed to do make progress on problem tasks.\n  REFLECT \u0026ndash; Assess what is going well and consider if doing more that will help you be more successful and assess what is hindering you and what you can do differently to get you work done with less stress. You reflections should result in actions (experiments for a week or so) to help you move more effectively toward your goals. If your experiment doesn\u0026rsquo;t help, they after the test period try a new experiment.\n   NOTE: Dead person activities are actions that even a dead person can successfully do. For example, waiting for someone else to help, not checking twitter in homework time, etc. Live person activities are action that only live people can successfully accomplish. For example, ask a peer for help, research on the Internet for ideas, go to a help session, replace random twitter checks with Pomodoro Technique (and allow twitter in the 5 minute breaks), etc.\n References Kanban  https://www.personalkanban.com/ https://moduscooperandi.com/books-and-classes  Pomodoro  https://francescocirillo.com/pages/pomodoro-technique https://www.youtube.com/watch?v=VFW3Ld7JO0w  Helpful Books Kanban - Task Management\n Real-World Kanban: Do Less, Accomplish More with Lean Thinking, by Mattias Skarin. Kanban in Action, by Marcus Hammarberg and Joakim Sundén. Kanban: Successful Evolutionary Change for Your Technology Business, by David J. Anderson. Personal Kanban: Mapping Work - Navigating Life, by Tonianne DeMaria Barry and Jim Benson. Kanban and Scrum: Making the Most of Both, by Mattias Skarin and Henrik Kniberg.  Pomodoro - Time Management\n Pomodoro Technique Illustrated, by Staffan Noteberg. The Pomodoro Technique: Work smarter, not harder, by Francesco Cirillo.  Effective Reflections, Experiments \u0026amp; Problem Solving\n The 5 Elements of Effective Thinking, by Edward B. Burger and Michael Starbird. the shibumi strategy: a powerful way to create MEANINGFUL CHANGE, by Matthew E. May.  Effective Goal Setting \u0026amp; Changes - with small easy steps\n Little Bets: How Breakthrough Ideas Emerge from Small Discoveries, by Peter Sims. One Small Step Can Change Your Life: The Kaizen Way Paperback, by Robert Maurer Ph.D. The Spirit of Kaizen: Creating Lasting Excellence One Small Step at a Time: Creating Lasting Excellence One Small Step at a Time, by Robert Maurer Ph.D.  ","date":1588526709,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1588526709,"objectID":"b9679358d2d397dad51621521db37f93","permalink":"https://btihen.github.io/post_edu/kanban_usage/","publishdate":"2020-05-03T19:25:09+02:00","relpermalink":"/post_edu/kanban_usage/","section":"post_edu","summary":"Intro Kanban is a visual way to track your tasks and your progress. Many people find this helpful way to to show yourself, your parents and teachers what work needs to be done.","tags":["Kanban"],"title":"Kanban Usage","type":"post_edu"},{"authors":["Tim Logan"],"categories":[],"content":"Tim Logan posted an interesting educational agility video of his ECIS Webinar and used materials developed my Paul Magnuson \u0026amp; me. He posted his slide deck on Trello.\nTim Logan\u0026rsquo;s video Intro into his Educational Agility webinar for ECIS.   In case people don\u0026rsquo;t have a linked-in account: https://www.linkedin.com/feed/update/urn%3Ali%3Aactivity%3A6659793273697120256/\nIn case people don\u0026rsquo;t have a trello account: https://trello.com/b/B5qwkjmE/webinar-agility\n","date":1587772800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1587772800,"objectID":"40e48fd81ab4b753bbc08ead7d1227a7","permalink":"https://btihen.github.io/coverage/tim_logan_ecis_agility_webinar_linkedin/","publishdate":"2020-04-26T05:03:26+02:00","relpermalink":"/coverage/tim_logan_ecis_agility_webinar_linkedin/","section":"coverage","summary":"As part of the ECIS Leadership Conference - April 2020, Guide and Lead Managing Partner, Tim Logan gives an overview of the importance of agility in building schools as life-affirming 21st century organisations.","tags":["Agile","Education","21 Century","Reflections"],"title":"Webinar Agility by Tim Logan","type":"coverage"},{"authors":["Paul Magnuson","Bill Tihen"],"categories":[],"content":"","date":1581984000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581984000,"objectID":"6850c588de5dfc758bf57bad3d1f723e","permalink":"https://btihen.github.io/publication/demos_and_collaborative_feedback_in_classroom_tieonline/","publishdate":"2020-04-17T17:31:32+02:00","relpermalink":"/publication/demos_and_collaborative_feedback_in_classroom_tieonline/","section":"publication","summary":"Four steps for students to give/get safe and effective feedback.","tags":["Agile","Education","Feedback","Emotional Safety","Student Choice"],"title":"Demos and Feedback in the Classroom","type":"publication"},{"authors":["Paul Magunson","Bill Tihen"],"categories":[],"content":"","date":1581292800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1581292800,"objectID":"e0d3261c08cbbd17e147909610a5cd2a","permalink":"https://btihen.github.io/publication/uplift_and_explore_build_confidence_tieonline/","publishdate":"2020-04-17T17:33:36+02:00","relpermalink":"/publication/uplift_and_explore_build_confidence_tieonline/","section":"publication","summary":"Uplift, focuses on the creation of an atmosphere in which students build on existing strengths and grow their self-confidence. Dangerous to an atmosphere of uplift are traditional assessment practices.","tags":["Agile","Education","Uplift","Challenge","Engagement","Confidence","Non-Judgemental","Natural Assessment"],"title":"Build Confidence: Exploration and Student Choice","type":"publication"},{"authors":["Paul Magnuson","Bill Tihen"],"categories":[],"content":"","date":1579219200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1579219200,"objectID":"187711157a0fd9b9c1980bbcb84cd5e2","permalink":"https://btihen.github.io/publication/pull_vs_push_tieonline/","publishdate":"2020-04-17T17:24:45+02:00","relpermalink":"/publication/pull_vs_push_tieonline/","section":"publication","summary":"Learning needs to change, ideally schools could adopt a student-pulled curriculum (instead of push), based on their own needs and interests.","tags":["Agile","Education","Effectiveness","Student Choice"],"title":"Pull vs Push: Student Centric","type":"publication"},{"authors":["Paul Magnuson","Bill Tihen"],"categories":[],"content":"","date":1577750400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577750400,"objectID":"e51ad2422958f495ce01291274f902c6","permalink":"https://btihen.github.io/publication/importance_of_challenge_tieonline/","publishdate":"2020-04-17T17:36:54+02:00","relpermalink":"/publication/importance_of_challenge_tieonline/","section":"publication","summary":"Importance of encouraging exploration, context, and challenge.","tags":["Agile","Education","Challenge","Deep Learning","Egagement","Multiple Levels","Meaningful Context"],"title":"Importance of Challenge: Engaged, Deep Learning","type":"publication"},{"authors":["Paul Magnuson","Bill Tihen"],"categories":[],"content":"","date":1576454400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576454400,"objectID":"c50446a163db375696dee644ee8526b9","permalink":"https://btihen.github.io/publication/roots_of_agile_for_education_tieonline/","publishdate":"2020-04-17T17:27:48+02:00","relpermalink":"/publication/roots_of_agile_for_education_tieonline/","section":"publication","summary":"So what’s agility? You’ll get different answers from different people, but you’ll likely pick up on a strong leitmotif of collaborative work.","tags":["Agile","Education","Collaboration","Manifesto","People Focus"],"title":"Roots of Agile for Education","type":"publication"},{"authors":["Paul Magnuson","Bill Tihen"],"categories":[],"content":"","date":1571184000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571184000,"objectID":"ebfdc1e79a18a196e0c943e002e15956","permalink":"https://btihen.github.io/publication/patient_explanations_spotlight_article/","publishdate":"2020-04-16T19:11:22+02:00","relpermalink":"/publication/patient_explanations_spotlight_article/","section":"publication","summary":"Reflections on Educational improvements through student choice, self-regulation \u0026 challenge.","tags":["Agie","Education\"","Student Coice","Self-Regulation","Challenge"],"title":"Patient Explanations Lead to Good Things","type":"publication"},{"authors":["Paul Magnuson","Bill Tihen","Nicola Cosgrove","Daniel Patton"],"categories":[],"content":"","date":1555430669,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555430669,"objectID":"9e10783c01e54f20c02cf1e0f71659aa","permalink":"https://btihen.github.io/publication/getting_agile_at_school_chapter/","publishdate":"2020-04-16T18:04:29+02:00","relpermalink":"/publication/getting_agile_at_school_chapter/","section":"publication","summary":"Approaches to encourage learner ownership and self-regulation using Agile Principles","tags":["Agile","Education","Project Based","Self-Regulation"],"title":"Getting Agile at School","type":"publication"},{"authors":null,"categories":null,"content":"btihen is not tracking any access information on this site.\n","date":1530140400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530140400,"objectID":"18d05a63a1c8d7ed973cc51838494e41","permalink":"https://btihen.github.io/privacy/","publishdate":"2018-06-28T00:00:00+01:00","relpermalink":"/privacy/","section":"","summary":"btihen is not tracking any access information on this site.","tags":null,"title":"Privacy Policy","type":"page"},{"authors":null,"categories":null,"content":"The materials on this site are licensed and may be used under the Creative Commons Attribution-NonCommercial 4.0 International License \nSummary: This is a human-readable summary of the Creative Commons NonCommercial 4.0 International License (and not a substitute for) the actual license.\nYou are free to:  Share — copy and redistribute the material in any medium or format Adapt — remix, transform, and build upon the material for any purpose, even commercially.  The licensor cannot revoke these freedoms as long as you follow the license terms.\nUnder the following terms:  Attribution — You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. NonCommercial — You may not use the material for commercial purposes.  No additional restrictions — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.\nNotices: You do not have to comply with the license for elements of the material in the public domain or where your use is permitted by an applicable exception or limitation.\nNo warranties are given. The license may not give you all of the permissions necessary for your intended use. For example, other rights such as publicity, privacy, or moral rights may limit how you use the material.\n","date":1530140400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1530140400,"objectID":"9b10c1f64082d3869fd4cb1f85809430","permalink":"https://btihen.github.io/terms/","publishdate":"2018-06-28T00:00:00+01:00","relpermalink":"/terms/","section":"","summary":"The materials on this site are licensed and may be used under the Creative Commons Attribution-NonCommercial 4.0 International License \nSummary: This is a human-readable summary of the Creative Commons NonCommercial 4.","tags":null,"title":"Terms","type":"page"},{"authors":["Paul Magnuson","Bill Tihen","Dan Patton"],"categories":[],"content":" Student boat (before 3-D printing) Student boat (with code) Student boat (with code) Student Retrospective Guide ","date":1523318400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1523318400,"objectID":"463f7984236509b536a7ad75bafe9e94","permalink":"https://btihen.github.io/publication/designed_to_float_your_boat_article/","publishdate":"2020-04-16T19:10:29+02:00","relpermalink":"/publication/designed_to_float_your_boat_article/","section":"publication","summary":"STEAM Projects provide an excellent avenue for student engagement and excellence through student choice, buy-in and challenge.","tags":["Agile","Education\"","Engagement","Student Choice","Challenge"],"title":"Designed to Float your Boat","type":"publication"},{"authors":["Paul Magnuson","Bill Tihen"],"categories":[],"content":"","date":1489363200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1489363200,"objectID":"e8bd95755815360a9e4a7b598a39e677","permalink":"https://btihen.github.io/publication/introducing_edgility_laser_report_2017/","publishdate":"2020-04-23T21:02:49+02:00","relpermalink":"/publication/introducing_edgility_laser_report_2017/","section":"publication","summary":"Education can be enhanced with an Agile Mindset","tags":["Education","Agility","Smallify","Reflection","Small Experiments"],"title":"Introducing EDgility","type":"publication"},{"authors":["Bill Tihen","Paul Magnuson\""],"categories":[],"content":"A discussion with Scrum Alliance on the importance of bringing Agile into Educaion and a few important implementation points.\n  ","date":1484611200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1484611200,"objectID":"523ed386909b760b98ba4bb1475828d3","permalink":"https://btihen.github.io/coverage/agile_in_education_interview_scrum_alliance/","publishdate":"2020-04-16T18:52:54+02:00","relpermalink":"/coverage/agile_in_education_interview_scrum_alliance/","section":"coverage","summary":"Principles to cultivate engaged, collaborative and self-regulated students. A video Interview by Scrum Alliance.","tags":["Agility","Education"],"title":"Agile in Education: Bill Tihen and Paul Magnuson of Leysin American School","type":"coverage"},{"authors":["Bill Tihen","Paul Magnuson","Howard Sublett"],"categories":[],"content":"How would our education system be different using agile principles and values?\nIn this InDepth edition, our conversation focuses around the American School in Leysin, Switzerland, and their experiments over the past 3 yrs in Agile in Education. My guests are Paul Magnuson ( Director of Curriculum \u0026amp; Director of the Middle School) and Bill Tihen ( Director of IT, Teacher, and runs the Makers Space ) Empowering students, making learning visible, and creating life long learners are goals for Paul and Bill as they lead this movement at Leysin.\nAgile Amped · Agile in Education at Leysin American School in Switzerland ","date":1480550400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1480550400,"objectID":"20a88c92f8a7c44084bb54cee882221a","permalink":"https://btihen.github.io/coverage/agile_in_education_at_las_interview_agile_amped/","publishdate":"2020-04-16T19:01:41+02:00","relpermalink":"/coverage/agile_in_education_at_las_interview_agile_amped/","section":"coverage","summary":"Principles to empower students, make learning visible and to create lifelong learners. An audio interview by Howard Sublett of AgileAmped Podcast.","tags":["Agile","Education"],"title":"Agile in Education at Leysin American School","type":"coverage"},{"authors":["John Miller"],"categories":[],"content":"To help incorporate Agile into their school, they [Paul Magnuson and Bill Tihen] brought in John Miller, a Certified Scrum Coach and Chief Empowerment Officer of Agile Classrooms, for two days of training. The Scrum Alliance has been a big supporter of John’s commitment to using Scrum to transform the world of education ever since he unveiled the first classroom to use Scrum at the Atlanta Scrum Gathering in 2010. When the Scrum Alliance, the largest Agile organization in the world, heard of Paul and Bill’s desire to implement Scrum for their students, they stepped up to sponsor the event. The Swiss Group of International Schools also co-sponsored the workshop.\nThe Agile Classrooms Workshop\n","date":1432598400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1432598400,"objectID":"1a8ef630952b77e7ab2c9629c208653f","permalink":"https://btihen.github.io/coverage/agile_classrooms_article_agile_classrooms/","publishdate":"2020-04-17T16:58:57+02:00","relpermalink":"/coverage/agile_classrooms_article_agile_classrooms/","section":"coverage","summary":"LAS began planning in 2014-2015 for the opening of a middle school (grades 7 and 8) in Fall 2016. Twenty-five educators attended John’s Agile Classroom Workshop.","tags":["Agile","Agile Classrooms","Middle School","John Miller","Scrum Workshop"],"title":"Agile Classrooms in the Alps","type":"coverage"},{"authors":["John Harlin"],"categories":[],"content":"","date":1431561600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1431561600,"objectID":"23e7d44bdda862f90c46b89f86d4d1e2","permalink":"https://btihen.github.io/coverage/climate_poles_john_harlin_lets_report/","publishdate":"2020-04-26T09:46:27+02:00","relpermalink":"/coverage/climate_poles_john_harlin_lets_report/","section":"coverage","summary":"To understand plant ecology, one needs to know the exact temperature that plants are actually growing in, rather than regional averages.  Our efforts to make this widely available to citizen scientists and espescially schools.","tags":["Education","Citizen Science","Climate","Ecology","Engineering"],"title":"Climate Sensor Poles","type":"coverage"},{"authors":["Dan Patton","Bill Tihen","John Harlin"],"categories":[],"content":"","date":1431561600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1431561600,"objectID":"f6862345dcbbe984a0c29ca8b3bdf28a","permalink":"https://btihen.github.io/publication/lets_climate_case_laser_report_2015/","publishdate":"2020-04-23T21:03:13+02:00","relpermalink":"/publication/lets_climate_case_laser_report_2015/","section":"publication","summary":"LAS is helping with Citizen Science and doing yearly Transect studies on species, we also wanted to build a way to simulate projected changes and see if we could assess plant survivability.","tags":["Transect","Species","Altitude","Climate Change","Citizen Science","Robotics","Plant Science","3-D Printing"],"title":"LETS ClimateCase","type":"publication"}]