<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PETAL Stack | btihen</title>
    <link>https://btihen.me/tags/petal-stack/</link>
      <atom:link href="https://btihen.me/tags/petal-stack/index.xml" rel="self" type="application/rss+xml" />
    <description>PETAL Stack</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2022</copyright><lastBuildDate>Sat, 09 Apr 2022 01:01:53 +0200</lastBuildDate>
    <image>
      <url>https://btihen.me/img/btihen_landing_page.png</url>
      <title>PETAL Stack</title>
      <link>https://btihen.me/tags/petal-stack/</link>
    </image>
    
    <item>
      <title>Phoenix 1.6 Easy PETAL Stack with DaisyUI</title>
      <link>https://btihen.me/post_elixir_phoenix/phoenix_1_6_petal_setup_with_daisyui/</link>
      <pubDate>Sat, 09 Apr 2022 01:01:53 +0200</pubDate>
      <guid>https://btihen.me/post_elixir_phoenix/phoenix_1_6_petal_setup_with_daisyui/</guid>
      <description>&lt;p&gt;I have been enjoying the tools associated with Elixir and exploring the frontend. LiveView helps make that more intuitive and when that isn&amp;rsquo;t enough, AlpineJS is a lightweight JS tool with a similar syntax as Vue.&lt;/p&gt;
&lt;h2 id=&#34;install-asdf---and-required-software&#34;&gt;Install asdf - and required software&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On a Mac I used Homebrew:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install asdf
echo -e &#39;\n. $(brew --prefix asdf)/asdf.sh&#39; &amp;gt;&amp;gt; ~/.bash_profile
echo -e &#39;\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash&#39; &amp;gt;&amp;gt; ~/.bash_profile
source ~/.bash_profile  # (or open a new terminal)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can install asdf software packages:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;asdf plugin-add erlang
asdf plugin-add elixir
asdf plugin-add Postgres
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you need to install the desired versions (usually the newest) - currently:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;asdf list all erlang
asdf install erlang 24.3.3
asdf global erlang 24.3.3


# note the elixir version otp must match the erlang version!
asdf list all elixir
asdf install elixir 1.13.4-otp-24
asdf global elixir 1.13.4-otp-24

# asdf install elixir 1.11.4-otp-24
# if you mismatch elixir with erlang you will get errors like:
# {&amp;quot;init terminating in do_boot&amp;quot;,{undef,[{elixir,start_cli,[],[]},{init,start_em,1,[]},{init,do_boot,3,[]}]}}

asdf list all Postgres
asdf install Postgres 14.2 # Slow! (maybe just use homebrew&#39;s version)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;get-the-newest-elixir-tools&#34;&gt;Get the newest Elixir tools&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;mix local.rebar --force
mix local.hex --force
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;get-the-newest-phoenix-hex-package&#34;&gt;Get the newest Phoenix Hex Package&lt;/h2&gt;
&lt;p&gt;Once you have established you have the requirements - the download the newest version of Phoenix (go to: 
&lt;a href=&#34;https://hexdocs.pm/phoenix/installation.html#phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://hexdocs.pm/phoenix/installation.html#phoenix&lt;/a&gt; to see the newest version) - at the time of this writing its 1.5.8 - be sure its installed using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mix archive.install hex phx_new 1.6.6 --force
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create-a-project-with-asdf-settings&#34;&gt;create a project with asdf settings&lt;/h2&gt;
&lt;p&gt;First we will create the folder / project location&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir petal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we will tell it which software to use :&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;touch petal/.tool-versions
cat &amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;petal/.tool-versions
erlang 24.3.3
elixir 1.13.3-otp-24
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create-a-new-phoenix-project&#34;&gt;Create a new Phoenix Project&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now you can simply do:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mix phx.new petal --live
cd petal
mix ecto.create
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;assuming all is good lets configure git:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
git add .
git commit -m &amp;quot;initial Phoneix install with LiveView&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;credo&#34;&gt;credo&lt;/h2&gt;
&lt;p&gt;add credo to mix.exs (optional but often useful)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;{:credo, &amp;quot;~&amp;gt; 1.6&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;configure credo&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mix deps.get
mix credo gen.config
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;tailwind--daisyui&#34;&gt;Tailwind &amp;amp; DaisyUI&lt;/h2&gt;
&lt;p&gt;Add to mix.exs&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;{:phx_gen_tailwind, &amp;quot;~&amp;gt; 0.1&amp;quot;, only: :dev, runtime: false}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;configure TailwindCSS&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mix deps.get
mix phx.gen.tailwind
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;test-tailwindcss&#34;&gt;Test TailwindCSS&lt;/h2&gt;
&lt;p&gt;add to the top of: &lt;code&gt;lib/slacker_gen_tail_web/templates/page/index.html.heex&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;&amp;lt;div class=&amp;quot;text-green-500 text-5xl text-center&amp;quot;&amp;gt;Large Centered Green TailwindCSS&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;start phoenix &lt;code&gt;mix -S phx.server&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;add-daisyui&#34;&gt;Add DaisyUI&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://daisyui.com/docs/install/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://daisyui.com/docs/install/&lt;/a&gt;

&lt;a href=&#34;https://elixirforum.com/t/how-to-get-daisyui-and-phoenix-to-work/46612/8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://elixirforum.com/t/how-to-get-daisyui-and-phoenix-to-work/46612/8&lt;/a&gt; (also explains what to do when using/deploying to Fly.io)!&lt;/p&gt;
&lt;p&gt;first we need to initialize npm (otherwise DaisyUI won&amp;rsquo;t load / integrate with esbuild)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd assets
npm init
# just using the defaults seems to work
npm install daisyui
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now configure Tailwind (&lt;code&gt;assets/tailwind.config.js&lt;/code&gt;) to use daisyui&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// assets/tailwind.config.js
module.exports = {
  mode: &#39;jit&#39;,
  purge: [
    &#39;./js/**/*.js&#39;,
    &#39;../lib/*_web/**/*.*ex&#39;
  ],
  theme: {
  },
  variants: {
    extend: {},
  },
  plugins: [require(&amp;quot;daisyui&amp;quot;)],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;test-daisyui&#34;&gt;Test DaisyUI&lt;/h2&gt;
&lt;p&gt;now lets add a DaisyUI Button to the default page &lt;code&gt;lib/fare_web/templates/page/index.html.heex&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;button class=&amp;quot;btn btn-primary&amp;quot;&amp;gt;Button&amp;lt;/button&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ideally when we start phoenix:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;iex -S mix phx.server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we should now see in the log:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;warn - You have enabled the JIT engine which is currently in preview.
warn - Preview features are not covered by semver, may introduce breaking changes, and can change at any time.

Rebuilding...

ðŸŒ¼ daisyUI components 2.13.6  https://github.com/saadeghi/daisyui
  âœ”ï¸Ž Including:  base, components, themes[29], utilities
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;now when we look at the landing page we should see a rounded blue button!&lt;/p&gt;
&lt;h2 id=&#34;install--test-alpine-js&#34;&gt;install &amp;amp; test Alpine JS&lt;/h2&gt;
&lt;p&gt;see the article on 
&lt;a href=&#34;https://btihen.me/post_elixir_phoenix/phoenix_1_6_petal_w_gen_n_custom_fonts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;phoenix installer (easiest)&lt;/a&gt; or 
&lt;a href=&#34;https://btihen.me/post_elixir_phoenix/phoenix_1_6_petal_setup_with_asdf/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;by hand&lt;/a&gt; to install aplinejs&lt;/p&gt;
&lt;h2 id=&#34;see-adding-fonts-for-more-options&#34;&gt;See Adding fonts for more options&lt;/h2&gt;
&lt;p&gt;see the article on adding a 
&lt;a href=&#34;https://btihen.me/post_elixir_phoenix/phoenix_1_6_petal_w_gen_n_custom_fonts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;custom font&lt;/a&gt; for font information&lt;/p&gt;
&lt;h2 id=&#34;tailwind--daisyui-with-flyio&#34;&gt;Tailwind &amp;amp; DaisyUI with Fly.io&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/phoenixframework/tailwind&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/phoenixframework/tailwind&lt;/a&gt;

&lt;a href=&#34;https://elixirforum.com/t/how-to-get-daisyui-and-phoenix-to-work/46612/8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://elixirforum.com/t/how-to-get-daisyui-and-phoenix-to-work/46612/8&lt;/a&gt;

&lt;a href=&#34;https://elixirforum.com/t/tailwind-not-working-in-production-no-styles-just-plain-html/45192&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://elixirforum.com/t/tailwind-not-working-in-production-no-styles-just-plain-html/45192&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;resources-16x&#34;&gt;Resources (1.6.x)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=vZBHkvTAb2U&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=vZBHkvTAb2U&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://thinkingelixir.com/petal-stack-in-elixir/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://thinkingelixir.com/petal-stack-in-elixir/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://larainfo.com/blogs/build-simple-count-app-using-apline-js-with-tailwind-css&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://larainfo.com/blogs/build-simple-count-app-using-apline-js-with-tailwind-css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://tailwindcss.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://tailwindcss.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/alpinejs/alpine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/alpinejs/alpine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/tailwindlabs/tailwindcss&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/tailwindlabs/tailwindcss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/add-tailwind-html-generators-in-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/add-tailwind-html-generators-in-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://elixirforum.com/t/how-do-i-use-a-custom-font-with-phoenix-1-6-and-esbuild/43791/16&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://elixirforum.com/t/how-do-i-use-a-custom-font-with-phoenix-1-6-and-esbuild/43791/16&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;older-resources&#34;&gt;Older Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=o4Prej0wIZA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=o4Prej0wIZA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://blog.pthompson.org/alpine-js-and-liveview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://blog.pthompson.org/alpine-js-and-liveview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://medium.com/mindvalley-technology/how-to-add-tailwindcss-to-your-phoenix-project-e2250ad31ace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/mindvalley-technology/how-to-add-tailwindcss-to-your-phoenix-project-e2250ad31ace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://thinkingelixir.com/podcast-episodes/021-tailwind-css-alpine-js-and-liveview-with-patrick-thompson/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://thinkingelixir.com/podcast-episodes/021-tailwind-css-alpine-js-and-liveview-with-patrick-thompson/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Phoenix 1.6 Easy PETAL Stack Setup (w/a Custom Font</title>
      <link>https://btihen.me/post_elixir_phoenix/phoenix_1_6_petal_w_gen_n_custom_fonts/</link>
      <pubDate>Fri, 04 Mar 2022 01:01:53 +0200</pubDate>
      <guid>https://btihen.me/post_elixir_phoenix/phoenix_1_6_petal_w_gen_n_custom_fonts/</guid>
      <description>&lt;p&gt;I have been enjoying the tools associated with Elixir and exploring the frontend. LiveView helps make that more intuitive and when that isn&amp;rsquo;t enough, AlpineJS is a lightweight JS tool with a similar syntax as Vue.&lt;/p&gt;
&lt;h2 id=&#34;install-asdf---and-required-software&#34;&gt;Install asdf - and required software&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On a Mac I used Homebrew:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install asdf
echo -e &#39;\n. $(brew --prefix asdf)/asdf.sh&#39; &amp;gt;&amp;gt; ~/.bash_profile
echo -e &#39;\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash&#39; &amp;gt;&amp;gt; ~/.bash_profile
source ~/.bash_profile  # (or open a new terminal)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can install asdf software packages:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;asdf plugin-add erlang
asdf plugin-add elixir
asdf plugin-add Postgres
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you need to install the desired versions (usually the newest) - currently:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;asdf list all erlang
asdf install erlang 24.2.2
asdf global erlang 24.2.2


# note the elixir version otp must match the erlang version!
asdf list all elixir
asdf install elixir 1.13.3-otp-24
asdf global elixir 1.13.3-otp-24

# asdf install elixir 1.11.4-otp-24
# if you mismatch elixir with erlang you will get errors like:
# {&amp;quot;init terminating in do_boot&amp;quot;,{undef,[{elixir,start_cli,[],[]},{init,start_em,1,[]},{init,do_boot,3,[]}]}}

asdf list all Postgres
asdf install Postgres 14.2
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;get-the-newest-elixir-tools&#34;&gt;Get the newest Elixir tools&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;mix local.rebar --force
mix local.hex --force
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;get-the-newest-phoenix-hex-package&#34;&gt;Get the newest Phoenix Hex Package&lt;/h2&gt;
&lt;p&gt;Once you have established you have the requrements - the download the newest version of Phoenix (go to: 
&lt;a href=&#34;https://hexdocs.pm/phoenix/installation.html#phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://hexdocs.pm/phoenix/installation.html#phoenix&lt;/a&gt; to see the newest version) - at the time of this writing its 1.5.8 - be sure its installed using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mix archive.install hex phx_new 1.6.6 --force
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create-a-project-with-asdf-settings&#34;&gt;create a project with asdf settings&lt;/h2&gt;
&lt;p&gt;First we will creat the folder / project location&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir petal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we will tell it which software to use:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;touch petal/.tool-versions
cat &amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;petal/.tool-versions
erlang 24.2.2
elixir 1.13.3-otp-24
Postgres 14.2
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create-a-new-phoenix-project&#34;&gt;Create a new Phoenix Project&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now you can simply do:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mix phx.new petal --live
cd petal
mix ecto.create
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;assuming all is good lets configure git:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
git add .
git commit -m &amp;quot;initial Phoenix install with LiveView&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;credo&#34;&gt;credo&lt;/h2&gt;
&lt;p&gt;add credo to mix.exs&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{:credo, &amp;quot;~&amp;gt; 1.6&amp;quot;},
{:phx_gen_tailwind, &amp;quot;~&amp;gt; 0.1.3&amp;quot;, only: :dev, runtime: false}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;configure Credo &amp;amp; TailwindCSS&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mix deps.get
mix credo gen.config
mix phx.gen.tailwind
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;test-tailwindcss&#34;&gt;Test TailwindCSS&lt;/h2&gt;
&lt;p&gt;add to the top of: &lt;code&gt;lib/slacker_gen_tail_web/templates/page/index.html.heex&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;&amp;lt;div class=&amp;quot;text-green-500 text-5xl text-center&amp;quot;&amp;gt;Large Centered Green TailwindCSS&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;start phoenix &lt;code&gt;mix -S phx.server&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;install-alpinejs&#34;&gt;install AlpineJS&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=vZBHkvTAb2U&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=vZBHkvTAb2U&lt;/a&gt;

&lt;a href=&#34;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd assets
npm install alpinejs
cd ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now change &lt;code&gt;app.js&lt;/code&gt; is to require our new setup:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;# assets/js/app.js
// .. after the app.scss import add:
import Alpine from &amp;quot;alpinejs&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;still in &lt;code&gt;assets/js/app.js&lt;/code&gt; find:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let csrfToken = document.querySelector(&amp;quot;meta[name=&#39;csrf-token&#39;]&amp;quot;).getAttribute(&amp;quot;content&amp;quot;)
let liveSocket = new LiveSocket(&amp;quot;/live&amp;quot;, Socket, {params: {_csrf_token: csrfToken}})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and change to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// after all the imports
window.Alpine = Alpine;
Alpine.start();
let hooks = {};
let csrfToken = document.querySelector(&amp;quot;meta[name=&#39;csrf-token&#39;]&amp;quot;).getAttribute(&amp;quot;content&amp;quot;)
let liveSocket = new LiveSocket(&amp;quot;/live&amp;quot;, Socket, {
  params: { _csrf_token: csrfToken },
  hooks: hooks,
  dom: {
    onBeforeElUpdated(from, to) {
      if (from._x_dataStack) {
        window.Alpine.clone(from, to);
      }
    },
  },
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;now change the loading of &lt;code&gt;assets/app.js&lt;/code&gt; in the root file to load &lt;code&gt;assets/js/app.js&lt;/code&gt; to load AlpineJS into Phoenix you do that with in &lt;code&gt;lib/fonts_web/templates/layout/root.html.heex&lt;/code&gt; by changing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;!-- change this from app.js to js/app.js --&amp;gt;
    &amp;lt;script defer phx-track-static type=&amp;quot;text/javascript&amp;quot; src={Routes.static_path(@conn, &amp;quot;/assets/app.js&amp;quot;)}&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;!-- change this from app.js to js/app.js --&amp;gt;
    &amp;lt;script defer phx-track-static type=&amp;quot;text/javascript&amp;quot; src={Routes.static_path(@conn, &amp;quot;/assets/js/app.js&amp;quot;)}&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;so now &lt;code&gt;lib/fonts_web/templates/layout/root.html.heex&lt;/code&gt; should look like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- lib/fonts_web/templates/layout/root.html.heex --&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;/&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;/&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;/&amp;gt;
    &amp;lt;%= csrf_meta_tag() %&amp;gt;
    &amp;lt;%= live_title_tag assigns[:page_title] || &amp;quot;SlackerPetal&amp;quot;, suffix: &amp;quot; Â· Phoenix Framework&amp;quot; %&amp;gt;
    &amp;lt;link phx-track-static rel=&amp;quot;stylesheet&amp;quot; href={Routes.static_path(@conn, &amp;quot;/assets/app.css&amp;quot;)}/&amp;gt;
    &amp;lt;!-- change the `javascript` static path from `/assets/app.js` to `/assets/app.js` to load AlpineJS --&amp;gt;
    &amp;lt;%# &amp;lt;script defer phx-track-static type=&amp;quot;text/javascript&amp;quot; src={Routes.static_path(@conn, &amp;quot;/assets/app.js&amp;quot;)}&amp;gt;&amp;lt;/script&amp;gt; %&amp;gt;
    &amp;lt;script defer phx-track-static type=&amp;quot;text/javascript&amp;quot; src={Routes.static_path(@conn, &amp;quot;/assets/js/app.js&amp;quot;)}&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;header&amp;gt;
      &amp;lt;section class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;nav&amp;gt;
          &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://hexdocs.pm/phoenix/overview.html&amp;quot;&amp;gt;Get Started&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;%= if function_exported?(Routes, :live_dashboard_path, 2) do %&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;%= link &amp;quot;LiveDashboard&amp;quot;, to: Routes.live_dashboard_path(@conn, :home) %&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;% end %&amp;gt;
          &amp;lt;/ul&amp;gt;
        &amp;lt;/nav&amp;gt;
        &amp;lt;a href=&amp;quot;https://phoenixframework.org/&amp;quot; class=&amp;quot;phx-logo&amp;quot;&amp;gt;
          &amp;lt;img src={Routes.static_path(@conn, &amp;quot;/images/phoenix.png&amp;quot;)} alt=&amp;quot;Phoenix Framework Logo&amp;quot;/&amp;gt;
        &amp;lt;/a&amp;gt;
      &amp;lt;/section&amp;gt;
    &amp;lt;/header&amp;gt;
    &amp;lt;%= @inner_content %&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;test-alpinejs&#34;&gt;Test AlpineJS&lt;/h2&gt;
&lt;p&gt;TEST by adding to the end of: &lt;code&gt;lib/petal_web/live/page_live.html.leex&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;&amp;lt;section&amp;gt;
  &amp;lt;h2&amp;gt;Alpine JS Installed&amp;lt;/h2&amp;gt;
  &amp;lt;div x-data=&amp;quot;{name:&#39;&#39;}&amp;quot;&amp;gt;
    &amp;lt;label for=&amp;quot;name&amp;quot;&amp;gt;Name:&amp;lt;/label&amp;gt;
    &amp;lt;input id=&amp;quot;name&amp;quot; type=&amp;quot;text&amp;quot; x-model=&amp;quot;name&amp;quot; /&amp;gt;
    &amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;&amp;lt;em&amp;gt;Output:&amp;lt;/em&amp;gt;&amp;lt;/b&amp;gt; &amp;lt;span x-text=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;test with:
&lt;code&gt;mix phx.server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;when typing the name should appear below!&lt;/p&gt;
&lt;h2 id=&#34;add-css-components-to-tailwindcss&#34;&gt;Add CSS Components to TailwindCSS&lt;/h2&gt;
&lt;p&gt;we will create a file for our default CSS styles the: &lt;code&gt;assets/css/default.css&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# assuming you are in the root directory
touch assets/css/default.css
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Put your default site CSS here.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s also create some custom CSS components:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;# assuming you are still in the assets directory on the cli
mkdir assets/css/components
touch assets/css/components/buttons.css
cat &amp;lt;&amp;lt;EOF &amp;gt;assets/css/components/buttons.css
@layer components {
  .btn-redish {
    @apply bg-red-300 hover:bg-red-600 text-blue-800 font-bold py-2 px-4 rounded;
  }
  .btn-greenish {
    @apply bg-green-300 hover:bg-green-600 text-blue-800 font-bold py-2 px-4 rounded;
  }
}
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s add our components (&amp;amp; Default CSS to our config)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/* Import tailwind - with postcss-import installed */
@import &amp;quot;tailwindcss/base&amp;quot;;
@import &amp;quot;tailwindcss/components&amp;quot;;
@import &amp;quot;tailwindcss/utilities&amp;quot;;

/* custom styles - put after base imports! */
@import &amp;quot;./default.css&amp;quot;;
/* import custom components */
@import &amp;quot;./components/buttons.css&amp;quot;;
/* default phoenix styles - replaced bby default.css file */
/* @import &amp;quot;./phoenix.css&amp;quot;; */
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;add a test html from tailwind to the end of: &lt;code&gt;lib/petal_web/live/page_live.html.leex&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;&amp;lt;section class=&amp;quot;grid grid-cols-1 gap-4&amp;quot;&amp;gt;
	&amp;lt;!-- tailwind text --&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h2 class=&amp;quot;text-red-500 text-5xl font-bold text-center&amp;quot;&amp;gt;Tailwind CSS with Alpine JS Dropdown&amp;lt;/h2&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;!-- alpinejs dropdown test --&amp;gt;
	&amp;lt;div x-data=&amp;quot;{ open: false }&amp;quot; class=&amp;quot;relative text-left&amp;quot;&amp;gt;
  	&amp;lt;button
  					@click=&amp;quot;open = !open&amp;quot;
  					@keydown.escape.window=&amp;quot;open = false&amp;quot;
  					@click.away=&amp;quot;open = false&amp;quot;
  					class=&amp;quot;flex items-center h-8 pl-3 pr-2 border border-black focus:outline-none&amp;quot;&amp;gt;
  			&amp;lt;span class=&amp;quot;text-sm leading-none&amp;quot;&amp;gt;
  					Options
  			&amp;lt;/span&amp;gt;
  			&amp;lt;svg class=&amp;quot;w-4 h-4 mt-px ml-2&amp;quot; xmlns=&amp;quot;http://www.w3.org/2000/svg&amp;quot; viewBox=&amp;quot;0 0 20 20&amp;quot; fill=&amp;quot;currentColor&amp;quot;&amp;gt;
  					&amp;lt;path fill-rule=&amp;quot;evenodd&amp;quot; d=&amp;quot;M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z&amp;quot; clip-rule=&amp;quot;evenodd&amp;quot; /&amp;gt;
  			&amp;lt;/svg&amp;gt;
  	&amp;lt;/button&amp;gt;
  	&amp;lt;div
  					x-cloak
  					x-show=&amp;quot;open&amp;quot;
  					x-transition:enter=&amp;quot;transition ease-out duration-100&amp;quot;
  					x-transition:enter-start=&amp;quot;transform opacity-0 scale-95&amp;quot;
  					x-transition:enter-end=&amp;quot;transform opacity-100 scale-100&amp;quot;
  					x-transition:leave=&amp;quot;transition ease-in duration-75&amp;quot;
  					x-transition:leave-start=&amp;quot;transform opacity-100 scale-100&amp;quot;
  					x-transition:leave-end=&amp;quot;transform opacity-0 scale-95&amp;quot;
  					class=&amp;quot;absolute flex flex-col w-40 mt-1 border border-black shadow-xs&amp;quot;&amp;gt;
  			&amp;lt;a class=&amp;quot;flex items-center h-8 px-3 text-sm hover:bg-gray-200&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Settings&amp;lt;/a&amp;gt;
  			&amp;lt;a class=&amp;quot;flex items-center h-8 px-3 text-sm hover:bg-gray-200&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Support&amp;lt;/a&amp;gt;
  			&amp;lt;a class=&amp;quot;flex items-center h-8 px-3 text-sm hover:bg-gray-200&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Sign Out&amp;lt;/a&amp;gt;
  	&amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;

  &amp;lt;!-- alpinejs counter test --&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;p class=&amp;quot;mt-5 font-bold text-center&amp;quot;&amp;gt;Counter with Component Buttons&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;!--
    If you want a box around the counter use:
    &amp;lt;div class=&amp;quot;flex items-center justify-center h-screen bg-gray-200&amp;quot;&amp;gt;
  --&amp;gt;
  &amp;lt;div class=&amp;quot;mt-10 flex justify-center&amp;quot; x-data=&amp;quot;{ count: 0 }&amp;quot;&amp;gt;
    &amp;lt;button class=&amp;quot;btn-redish&amp;quot; x-on:click=&amp;quot;count--&amp;quot;&amp;gt;Decrement&amp;lt;/button&amp;gt;
    &amp;lt;code&amp;gt;count: &amp;lt;/code&amp;gt;&amp;lt;code x-text=&amp;quot;count&amp;quot;&amp;gt;&amp;lt;/code&amp;gt;
    &amp;lt;button class=&amp;quot;btn-greenish&amp;quot; x-on:click=&amp;quot;count++&amp;quot;&amp;gt;Increment&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Start phoenix with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;iex -S mix phx.server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we should have a dropdown &amp;amp; our colored component buttons on our counter.&lt;/p&gt;
&lt;h2 id=&#34;add-a-custom-font&#34;&gt;Add a custom Font&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Find a font at: 
&lt;a href=&#34;https://fonts.google.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fonts.google.com/&lt;/a&gt; (or any other source of fonts)&lt;/p&gt;
&lt;p&gt;I will use &lt;code&gt;handlee&lt;/code&gt; as it is very distinctive - to make the setup easier I will download &lt;code&gt;handlee&lt;/code&gt; from:

&lt;a href=&#34;https://google-webfonts-helper.herokuapp.com/fonts/handlee?subsets=latin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://google-webfonts-helper.herokuapp.com/fonts/handlee?subsets=latin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I will put the fonts in the folder: &lt;code&gt;assets/fonts/handlee&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p assets/fonts/handlee
touch assets/fonts/handlee/handless.css
cat &amp;lt;&amp;lt;EOF&amp;gt;&amp;gt;assets/fonts/handlee/handless.css
/* handlee-regular - latin - copied from: https://google-webfonts-helper.herokuapp.com/fonts/handlee?subsets=latin */
/* be sure the font-path is local to where the fonts are */
@font-face {
  font-family: &#39;Handlee&#39;;
  font-style: normal;
  font-weight: 400;
  src: local(&#39;&#39;),
       url(&#39;handlee-v12-latin-regular.woff2&#39;) format(&#39;woff2&#39;),
       url(&#39;handlee-v12-latin-regular.woff&#39;) format(&#39;woff&#39;);
}
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now lets setup &lt;code&gt;esbuild&lt;/code&gt; to manage the CSS and fonts - the default in &lt;code&gt;config/config.exs&lt;/code&gt; is:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;# config/config.exs
config :esbuild,
  version: &amp;quot;0.14.0&amp;quot;,
  default: [
    args: ~w(js/app.js --bundle --target=es2017 --outdir=../priv/static/assets --external:/fonts/* --external:/images/*),
    cd: Path.expand(&amp;quot;../assets&amp;quot;, __DIR__),
    env: %{&amp;quot;NODE_PATH&amp;quot; =&amp;gt; Path.expand(&amp;quot;../deps&amp;quot;, __DIR__)}
  ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We will need to add our FontCSS path &lt;code&gt;fonts/handlee/handlee.css&lt;/code&gt; to the build System along with the font types to load:&lt;code&gt;--loader:.woff2=file --loader:.woff=file&lt;/code&gt;, so now it should look like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;config :esbuild,
  version: &amp;quot;0.14.0&amp;quot;,
  default: [
    args: ~w(js/app.js fonts/handlee/handlee.css --bundle --loader:.woff2=file --loader:.woff=file --target=es2017 --outdir=../priv/static/assets --external:/fonts/* --external:/images/*),
    cd: Path.expand(&amp;quot;../assets&amp;quot;, __DIR__),
    env: %{&amp;quot;NODE_PATH&amp;quot; =&amp;gt; Path.expand(&amp;quot;../deps&amp;quot;, __DIR__)}
  ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you NEED to restart phoenix once a config file changes!&lt;/p&gt;
&lt;p&gt;Assuming everything is working you will see:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the fonts files in: &lt;code&gt;priv/static/assets/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;the fonts css in: &lt;code&gt;priv/static/assets/fonts/handlee/handlee.css&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;this is critical - if this isn&amp;rsquo;t working you MUST fix it!&lt;/p&gt;
&lt;h3 id=&#34;integrate-the-font-into-css--tailwindcss&#34;&gt;Integrate the font into CSS (&amp;amp; TailwindCSS)&lt;/h3&gt;
&lt;p&gt;Now you will need to tell TailwindCSS about the font so you can use: &lt;code&gt;font-handprint&lt;/code&gt; as a CSS class.&lt;/p&gt;
&lt;p&gt;Your initial &lt;code&gt;assets/tailwind.config.js&lt;/code&gt; file will look like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;module.exports = {
  mode: &#39;jit&#39;,
  purge: [
    &#39;./js/**/*.js&#39;,
    &#39;../lib/*_web/**/*.*ex&#39;
  ],
  theme: {
    extend: {},
  },
  variants: {
    extend: {},
  },
  plugins: [],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Your define you font in the &lt;code&gt;theme&lt;/code&gt; section with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;module.exports = {
  mode: &#39;jit&#39;,
  purge: [
    &#39;./js/**/*.js&#39;,
    &#39;../lib/*_web/**/*.*ex&#39;
  ],
  theme: {
    extend: {
      fontFamily: {
        handprint: [&#39;Handlee&#39;]
      },
    },
  },
  variants: {
    extend: {},
  },
  plugins: [],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Working in Switzerland it is convenient to use very multi-lingual fonts such as &lt;code&gt;Noto&lt;/code&gt; and redefine the sans and serif fonts - in fact, my goto fonts and setup are:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;module.exports = {
  mode: &#39;jit&#39;,
  purge: [
    &#39;./js/**/*.js&#39;,
    &#39;../lib/*_web/**/*.*ex&#39;
  ],
  theme: {
    extend: {
      fontFamily: {
        comic: [&#39;ComicNeue&#39;],
        hand: [&#39;Handless&#39;],
        sans: [&#39;NotoSans&#39;, &#39;sans-serif&#39;],
        serif: [&#39;NotoSerif&#39;, &#39;serif&#39;]
      },
    },
  },
  variants: {
    extend: {},
  },
  plugins: [],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;integrate-the-fonts-into-phoenix&#34;&gt;Integrate the Fonts Into Phoenix&lt;/h3&gt;
&lt;p&gt;in the root.html.heex file add the static route &lt;code&gt;/assets/fonts/Hanlee/hanlee.css&lt;/code&gt; before the &lt;code&gt;/assets/app.css&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is done with the following html route:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;    &amp;lt;!-- add font before app.css --&amp;gt;
    &amp;lt;link phx-track-static rel=&amp;quot;stylesheet&amp;quot; href={Routes.static_path(@conn, &amp;quot;/assets/fonts/Hanlee/hanlee.css&amp;quot;)}/&amp;gt;
    &amp;lt;link phx-track-static rel=&amp;quot;stylesheet&amp;quot; href={Routes.static_path(@conn, &amp;quot;/assets/app.css&amp;quot;)}/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So now &lt;code&gt;lib/fonts_web/templates/layout/root.html.heex&lt;/code&gt; would look like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!-- lib/fonts_web/templates/layout/root.html.heex --&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;/&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;/&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;/&amp;gt;
    &amp;lt;%= csrf_meta_tag() %&amp;gt;
    &amp;lt;%= live_title_tag assigns[:page_title] || &amp;quot;SlackerPetal&amp;quot;, suffix: &amp;quot; Â· Phoenix Framework&amp;quot; %&amp;gt;
    &amp;lt;!-- add font here BEFORE `/assets/app.css` --&amp;gt;
    &amp;lt;link phx-track-static rel=&amp;quot;stylesheet&amp;quot; href={Routes.static_path(@conn, &amp;quot;/assets/fonts/Hanlee/hanlee.css&amp;quot;)}/&amp;gt;
    &amp;lt;link phx-track-static rel=&amp;quot;stylesheet&amp;quot; href={Routes.static_path(@conn, &amp;quot;/assets/app.css&amp;quot;)}/&amp;gt;
    &amp;lt;!-- change the `javascript` static path from `/assets/app.js` to `/assets/app.js` to load AlpineJS --&amp;gt;
    &amp;lt;%# &amp;lt;script defer phx-track-static type=&amp;quot;text/javascript&amp;quot; src={Routes.static_path(@conn, &amp;quot;/assets/app.js&amp;quot;)}&amp;gt;&amp;lt;/script&amp;gt; %&amp;gt;
    &amp;lt;script defer phx-track-static type=&amp;quot;text/javascript&amp;quot; src={Routes.static_path(@conn, &amp;quot;/assets/js/app.js&amp;quot;)}&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;header&amp;gt;
      &amp;lt;section class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;nav&amp;gt;
          &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://hexdocs.pm/phoenix/overview.html&amp;quot;&amp;gt;Get Started&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;%= if function_exported?(Routes, :live_dashboard_path, 2) do %&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;%= link &amp;quot;LiveDashboard&amp;quot;, to: Routes.live_dashboard_path(@conn, :home) %&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;% end %&amp;gt;
          &amp;lt;/ul&amp;gt;
        &amp;lt;/nav&amp;gt;
        &amp;lt;a href=&amp;quot;https://phoenixframework.org/&amp;quot; class=&amp;quot;phx-logo&amp;quot;&amp;gt;
          &amp;lt;img src={Routes.static_path(@conn, &amp;quot;/images/phoenix.png&amp;quot;)} alt=&amp;quot;Phoenix Framework Logo&amp;quot;/&amp;gt;
        &amp;lt;/a&amp;gt;
      &amp;lt;/section&amp;gt;
    &amp;lt;/header&amp;gt;
    &amp;lt;%= @inner_content %&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;test-you-new-font&#34;&gt;Test you new font&lt;/h3&gt;
&lt;p&gt;Now add to the file &lt;code&gt;lib/slacker_gen_tail_web/templates/page/index.html.heex&lt;/code&gt; to the following html:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;p class=&amp;quot;text-red-500 text-5xl text-center font-handprint&amp;quot;&amp;gt;Hand Printed&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ideally you now see your new font displayed within the &amp;ldquo;Hand Printed&amp;rdquo; text&lt;/p&gt;
&lt;p&gt;NOTE:
if you get an error like:
&lt;code&gt;(Phoenix.Router.NoRouteError) no route found for GET /assets/fonts/Handlee/handlee.css&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Check your esbundle config and that &lt;code&gt;priv/static/assets/fonts/handlee/handlee.css&lt;/code&gt; is being copied (Static routes always point to: &lt;code&gt;priv/static/&lt;/code&gt;)!&lt;/p&gt;
&lt;h2 id=&#34;resources-16x&#34;&gt;Resources (1.6.x)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=vZBHkvTAb2U&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=vZBHkvTAb2U&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://thinkingelixir.com/petal-stack-in-elixir/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://thinkingelixir.com/petal-stack-in-elixir/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://larainfo.com/blogs/build-simple-count-app-using-apline-js-with-tailwind-css&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://larainfo.com/blogs/build-simple-count-app-using-apline-js-with-tailwind-css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://tailwindcss.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://tailwindcss.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/alpinejs/alpine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/alpinejs/alpine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/tailwindlabs/tailwindcss&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/tailwindlabs/tailwindcss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/add-tailwind-html-generators-in-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/add-tailwind-html-generators-in-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://elixirforum.com/t/how-do-i-use-a-custom-font-with-phoenix-1-6-and-esbuild/43791/16&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://elixirforum.com/t/how-do-i-use-a-custom-font-with-phoenix-1-6-and-esbuild/43791/16&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;older-resources&#34;&gt;Older Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=o4Prej0wIZA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=o4Prej0wIZA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://blog.pthompson.org/alpine-js-and-liveview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://blog.pthompson.org/alpine-js-and-liveview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://medium.com/mindvalley-technology/how-to-add-tailwindcss-to-your-phoenix-project-e2250ad31ace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/mindvalley-technology/how-to-add-tailwindcss-to-your-phoenix-project-e2250ad31ace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://thinkingelixir.com/podcast-episodes/021-tailwind-css-alpine-js-and-liveview-with-patrick-thompson/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://thinkingelixir.com/podcast-episodes/021-tailwind-css-alpine-js-and-liveview-with-patrick-thompson/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Phoenix 1.6 PETAL Stack Setup by Hand</title>
      <link>https://btihen.me/post_elixir_phoenix/phoenix_1_6_petal_setup_with_asdf/</link>
      <pubDate>Sun, 27 Feb 2022 01:01:53 +0200</pubDate>
      <guid>https://btihen.me/post_elixir_phoenix/phoenix_1_6_petal_setup_with_asdf/</guid>
      <description>&lt;p&gt;I have been enjoying the tools associated with Elixir and exploring the frontend. LiveView helps make that more intuitive and when that isn&amp;rsquo;t enough, AlpineJS is a lightweight JS tool with a similar syntax as Vue.&lt;/p&gt;
&lt;h2 id=&#34;install-asdf---and-required-software&#34;&gt;Install asdf - and required software&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On a Mac I used Homebrew:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install asdf
echo -e &#39;\n. $(brew --prefix asdf)/asdf.sh&#39; &amp;gt;&amp;gt; ~/.bash_profile
echo -e &#39;\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash&#39; &amp;gt;&amp;gt; ~/.bash_profile
source ~/.bash_profile  # (or open a new terminal)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can install asdf software packages:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;asdf plugin-add erlang
asdf plugin-add elixir
asdf plugin-add Postgres
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you need to install the desired versions (usually the newest) - currently:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;asdf list all erlang
asdf install erlang 24.2.2
asdf global erlang 24.2.2


# note the elixir version otp must match the erlang version!
asdf list all elixir
asdf install elixir 1.13.3-otp-24
asdf global elixir 1.13.3-otp-24

# asdf install elixir 1.11.4-otp-24
# if you mismatch elixir with erlang you will get errors like:
# {&amp;quot;init terminating in do_boot&amp;quot;,{undef,[{elixir,start_cli,[],[]},{init,start_em,1,[]},{init,do_boot,3,[]}]}}

asdf list all Postgres
asdf install Postgres 14.2
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;get-the-newest-elixir-tools&#34;&gt;Get the newest Elixir tools&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;mix local.rebar --force
mix local.hex --force
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;get-the-newest-phoenix-hex-package&#34;&gt;Get the newest Phoenix Hex Package&lt;/h2&gt;
&lt;p&gt;Once you have established you have the requirements - the download the newest version of Phoenix (go to: 
&lt;a href=&#34;https://hexdocs.pm/phoenix/installation.html#phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://hexdocs.pm/phoenix/installation.html#phoenix&lt;/a&gt; to see the newest version) - at the time of this writing its 1.5.8 - be sure its installed using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mix archive.install hex phx_new 1.6.6 --force
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create-a-project-with-asdf-settings&#34;&gt;create a project with asdf settings&lt;/h2&gt;
&lt;p&gt;First we will create the folder / project location&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir petal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we will tell it which software to use:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;touch petal/.tool-versions
cat &amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;petal/.tool-versions
erlang 24.2.2
elixir 1.13.3-otp-24
Postgres 14.2
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create-a-new-phoenix-project&#34;&gt;Create a new Phoenix Project&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now you can simply do:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mix phx.new petal --live
cd petal
mix ecto.create
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;assuming all is good lets configure git:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
git add .
git commit -m &amp;quot;initial Phoneix install with LiveView&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;credo&#34;&gt;credo&lt;/h2&gt;
&lt;p&gt;add credo to mix.exs&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{:credo, &amp;quot;~&amp;gt; 1.6&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;configure credo&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mix deps.get
mix credo gen.config
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install--test-alpine-js&#34;&gt;install &amp;amp; test Alpine JS&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=vZBHkvTAb2U&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=vZBHkvTAb2U&lt;/a&gt;

&lt;a href=&#34;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd assets
npm install alpinejs
cd ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now change &lt;code&gt;app.js&lt;/code&gt; is to require our new setup:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;# assets/js/app.js
// .. after the app.scss import add:
import Alpine from &amp;quot;alpinejs&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;still in &lt;code&gt;assets/js/app.js&lt;/code&gt; find:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;let csrfToken = document.querySelector(&amp;quot;meta[name=&#39;csrf-token&#39;]&amp;quot;).getAttribute(&amp;quot;content&amp;quot;)
let liveSocket = new LiveSocket(&amp;quot;/live&amp;quot;, Socket, {params: {_csrf_token: csrfToken}})
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and change to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// after all the imports
window.Alpine = Alpine;
Alpine.start();
let hooks = {};
let csrfToken = document.querySelector(&amp;quot;meta[name=&#39;csrf-token&#39;]&amp;quot;).getAttribute(&amp;quot;content&amp;quot;)
let liveSocket = new LiveSocket(&amp;quot;/live&amp;quot;, Socket, {
  params: { _csrf_token: csrfToken },
  hooks: hooks,
  dom: {
    onBeforeElUpdated(from, to) {
      if (from._x_dataStack) {
        window.Alpine.clone(from, to);
      }
    },
  },
});

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;TEST by adding to the end of: &lt;code&gt;lib/petal_web/live/page_live.html.leex&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;&amp;lt;section&amp;gt;
  &amp;lt;h2&amp;gt;Alpine JS Installed&amp;lt;/h2&amp;gt;
  &amp;lt;div x-data=&amp;quot;{name:&#39;&#39;}&amp;quot;&amp;gt;
    &amp;lt;label for=&amp;quot;name&amp;quot;&amp;gt;Name:&amp;lt;/label&amp;gt;
    &amp;lt;input id=&amp;quot;name&amp;quot; type=&amp;quot;text&amp;quot; x-model=&amp;quot;name&amp;quot; /&amp;gt;
    &amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;&amp;lt;em&amp;gt;Output:&amp;lt;/em&amp;gt;&amp;lt;/b&amp;gt; &amp;lt;span x-text=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;test with:
&lt;code&gt;mix phx.server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;when typing the name should appear below!&lt;/p&gt;
&lt;p&gt;let&amp;rsquo;s snapshot:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -m &amp;quot;phoenix with alpine js&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;integrating-tailwind-into-phoenix&#34;&gt;Integrating Tailwind into phoenix&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=vZBHkvTAb2U&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=vZBHkvTAb2U&lt;/a&gt;

&lt;a href=&#34;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&lt;/a&gt;

&lt;a href=&#34;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;lets install tailwind:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd assets
npm install autoprefixer postcss postcss-import postcss-cli tailwindcss --save-dev
cd ..
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;comment out &lt;code&gt;import &amp;quot;../css/app.css&amp;quot;&lt;/code&gt; to avoid pipeline compilation conflicts&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;// assets/js/app.js
// We import the CSS which is extracted to its own file by esbuild.
// Remove this line if you add a your own CSS build pipeline (e.g postcss).
// import &amp;quot;../css/app.css&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;now create &amp;amp; configure postcss.config.js&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat &amp;lt;&amp;lt;EOF&amp;gt;assets/postcss.config.js
module.exports = {
  plugins: {
    &amp;quot;postcss-import&amp;quot;: {},
    tailwindcss: {},
    autoprefixer: {},
  }
}
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;now configure tailwind with (to purge *.js, *.eex, *.leex, *.heex files)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;cat &amp;lt;&amp;lt;EOF &amp;gt;assets/tailwind.config.js
module.exports = {
  mode: &amp;quot;jit&amp;quot;,
  purge: [
    &amp;quot;./js/**/*.js&amp;quot;,
    &amp;quot;../lib/*_web/**/*.*ex&amp;quot;
  ],
  theme: {
    extend: {},
  },
  variants: {
    extend: {},
  },
  plugins: [],
};

EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;in &lt;code&gt;config/dev.exs&lt;/code&gt; update the watcher with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;# config/dev.exs
watchers: [
  esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},
  npx: [
    &amp;quot;tailwindcss&amp;quot;,
    &amp;quot;--input=css/app.css&amp;quot;,
    &amp;quot;--output=../priv/static/assets/app.css&amp;quot;,
    &amp;quot;--postcss&amp;quot;,
    &amp;quot;--watch&amp;quot;,
    cd: Path.expand(&amp;quot;../assets&amp;quot;, __DIR__)
  ]
]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to BUILD ASSETS in Production add in &lt;code&gt;deps/phoenix/package.json&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;scripts&amp;quot;: {
  &amp;quot;deploy&amp;quot;: &amp;quot;NODE_ENV=production tailwindcss --postcss --minify --input=css/app.css --output=../priv/static/assets/app.css&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and change this to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  &amp;quot;scripts&amp;quot;: {
    &amp;quot;deploy&amp;quot;: &amp;quot;NODE_ENV=production webpack --mode production&amp;quot;,
    &amp;quot;watch&amp;quot;: &amp;quot;webpack --mode development --watch&amp;quot;
  },
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we will create a file for our custom styles the &lt;code&gt;assets/css/default-styles.css&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# assuming you are in the root directory
touch assets/css/default-styles.css
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s also create our a custom component (we will make buttons for a counter to be sure tailwind and aplineJS are playing well together):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;# assuming you are still in the assets directory on the cli
mkdir assets/css/components
touch assets/css/components/buttons.css
cat &amp;lt;&amp;lt;EOF &amp;gt;assets/css/components/buttons.css
@layer components {
  .btn-redish {
    @apply bg-red-300 hover:bg-red-600 text-blue-800 font-bold py-2 px-4 rounded;
  }
  .btn-greenish {
    @apply bg-green-300 hover:bg-green-600 text-blue-800 font-bold py-2 px-4 rounded;
  }
}
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now will will configure Phoenix to load Tailwind, our custom-styles and our custom-components &amp;ndash; DO THIS AT THE TOP OF the file &lt;code&gt;assets/css/app.scss&lt;/code&gt; (@imports must be before all else):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/* Import tailwind - with postcss-import installed */
@import &amp;quot;tailwindcss/base&amp;quot;;
@import &amp;quot;tailwindcss/components&amp;quot;;
@import &amp;quot;tailwindcss/utilities&amp;quot;;

/* custom styles - put after base imports! */
@import &amp;quot;./default-styles.css&amp;quot;;
/* import custom components */
@import &amp;quot;./components/buttons.css&amp;quot;;
/* default phoenix styles - eventually remove */
@import &amp;quot;./phoenix.css&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;add a test html from tailwind to the end of: &lt;code&gt;lib/petal_web/live/page_live.html.leex&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;&amp;lt;section class=&amp;quot;grid grid-cols-1 gap-4&amp;quot;&amp;gt;
	&amp;lt;!-- tailwind text --&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h2 class=&amp;quot;text-red-500 text-5xl font-bold text-center&amp;quot;&amp;gt;Tailwind CSS with Alpine JS Dropdown&amp;lt;/h2&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;!-- alpinejs dropdown test --&amp;gt;
	&amp;lt;div x-data=&amp;quot;{ open: false }&amp;quot; class=&amp;quot;relative text-left&amp;quot;&amp;gt;
  	&amp;lt;button
  					@click=&amp;quot;open = !open&amp;quot;
  					@keydown.escape.window=&amp;quot;open = false&amp;quot;
  					@click.away=&amp;quot;open = false&amp;quot;
  					class=&amp;quot;flex items-center h-8 pl-3 pr-2 border border-black focus:outline-none&amp;quot;&amp;gt;
  			&amp;lt;span class=&amp;quot;text-sm leading-none&amp;quot;&amp;gt;
  					Options
  			&amp;lt;/span&amp;gt;
  			&amp;lt;svg class=&amp;quot;w-4 h-4 mt-px ml-2&amp;quot; xmlns=&amp;quot;http://www.w3.org/2000/svg&amp;quot; viewBox=&amp;quot;0 0 20 20&amp;quot; fill=&amp;quot;currentColor&amp;quot;&amp;gt;
  					&amp;lt;path fill-rule=&amp;quot;evenodd&amp;quot; d=&amp;quot;M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z&amp;quot; clip-rule=&amp;quot;evenodd&amp;quot; /&amp;gt;
  			&amp;lt;/svg&amp;gt;
  	&amp;lt;/button&amp;gt;
  	&amp;lt;div
  					x-cloak
  					x-show=&amp;quot;open&amp;quot;
  					x-transition:enter=&amp;quot;transition ease-out duration-100&amp;quot;
  					x-transition:enter-start=&amp;quot;transform opacity-0 scale-95&amp;quot;
  					x-transition:enter-end=&amp;quot;transform opacity-100 scale-100&amp;quot;
  					x-transition:leave=&amp;quot;transition ease-in duration-75&amp;quot;
  					x-transition:leave-start=&amp;quot;transform opacity-100 scale-100&amp;quot;
  					x-transition:leave-end=&amp;quot;transform opacity-0 scale-95&amp;quot;
  					class=&amp;quot;absolute flex flex-col w-40 mt-1 border border-black shadow-xs&amp;quot;&amp;gt;
  			&amp;lt;a class=&amp;quot;flex items-center h-8 px-3 text-sm hover:bg-gray-200&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Settings&amp;lt;/a&amp;gt;
  			&amp;lt;a class=&amp;quot;flex items-center h-8 px-3 text-sm hover:bg-gray-200&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Support&amp;lt;/a&amp;gt;
  			&amp;lt;a class=&amp;quot;flex items-center h-8 px-3 text-sm hover:bg-gray-200&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Sign Out&amp;lt;/a&amp;gt;
  	&amp;lt;/div&amp;gt;
	&amp;lt;/div&amp;gt;

  &amp;lt;!-- alpinejs counter test --&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;p class=&amp;quot;mt-5 font-bold text-center&amp;quot;&amp;gt;Counter with Component Buttons&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;!--
    If you want a box around the counter use:
    &amp;lt;div class=&amp;quot;flex items-center justify-center h-screen bg-gray-200&amp;quot;&amp;gt;
  --&amp;gt;
  &amp;lt;div class=&amp;quot;mt-10 flex justify-center&amp;quot; x-data=&amp;quot;{ count: 0 }&amp;quot;&amp;gt;
    &amp;lt;button class=&amp;quot;btn-redish&amp;quot; x-on:click=&amp;quot;count--&amp;quot;&amp;gt;Decrement&amp;lt;/button&amp;gt;
    &amp;lt;code&amp;gt;count: &amp;lt;/code&amp;gt;&amp;lt;code x-text=&amp;quot;count&amp;quot;&amp;gt;&amp;lt;/code&amp;gt;
    &amp;lt;button class=&amp;quot;btn-greenish&amp;quot; x-on:click=&amp;quot;count++&amp;quot;&amp;gt;Increment&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;test-with&#34;&gt;Test with&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;iex -S mix phx.server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we should have a dropdown &amp;amp; our colored component buttons on our counter.&lt;/p&gt;
&lt;p&gt;now lets snapshot our PETAL setup:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -m &amp;quot;PETAL 1.6.x Configured&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;add-a-custom-font&#34;&gt;Add a custom Font&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We will download 2 Fonts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Noto Sans - (full international support &amp;amp; very readable):

&lt;a href=&#34;https://google-webfonts-helper.herokuapp.com/fonts/noto-sans?subsets=latin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://google-webfonts-helper.herokuapp.com/fonts/noto-sans?subsets=latin&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Quickens Comic (easy to read and fun) -

&lt;a href=&#34;https://graphicgoods.net/downloads/quickens-free-font/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://graphicgoods.net/downloads/quickens-free-font/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;noto-sans&#34;&gt;Noto Sans&lt;/h3&gt;
&lt;p&gt;We will start with Noto - listed on Google fonts from Webfonts Helper&lt;/p&gt;
&lt;p&gt;Copy the CSS from the website (prefer modern browswers if possible) - update the Customize folder prefix&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;mkdir -p assets/vendor/fonts/NotoSans
cat &amp;lt;&amp;lt;EOF&amp;gt;assets/vendor/fonts/NotoSans/noto_sans.css
/* noto-sans-regular - latin-ext_latin */
@font-face {
  font-family: &#39;Noto Sans&#39;;
  font-style: normal;
  font-weight: 400;
  src: local(&#39;&#39;),
       url(&#39;../fonts/NotoSans/noto-sans-v25-latin-ext_latin-regular.woff2&#39;) format(&#39;woff2&#39;), /* Chrome 26+, Opera 23+, Firefox 39+ */
       url(&#39;../fonts/NotoSans/noto-sans-v25-latin-ext_latin-regular.woff&#39;) format(&#39;woff&#39;); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;quickens-otf&#34;&gt;Quickens (otf)&lt;/h3&gt;
&lt;p&gt;Download and convert the font at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://transfonter.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://transfonter.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://onlinefontconverter.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://onlinefontconverter.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.fontsquirrel.com/tools/webfont-generator&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.fontsquirrel.com/tools/webfont-generator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;mkdir -p assets/vendor/fonts/Quickens
cat &amp;lt;&amp;lt;EOF&amp;gt;assets/vendor/fonts/Quickens/quickens.css
/* otf not recommended - convert the font at:
  * https://transfonter.org/
  * https://onlinefontconverter.com/
  * https://www.fontsquirrel.com/tools/webfont-generator

@font-face {
  font-family: &#39;Quickens&#39;;
  font-style: normal;
  font-weight: 400;
  src: local(&#39;&#39;),
       url(&#39;quickens-regular.otf&#39;) format(&#39;opentype&#39;),
       url(&#39;quickens-rough.otf&#39;) format(&#39;opentype&#39;);
} */

@font-face {
  font-family: &#39;Quickens&#39;;
  font-style: normal;
  font-weight: 400;
  src: local(&#39;&#39;),
       url(&#39;quickens_regular-webfont.woff2&#39;) format(&#39;woff2&#39;), /* Chrome 26+, Opera 23+, Firefox 39+ */
       url(&#39;quickens_regular-webfont.woff&#39;) format(&#39;woff&#39;); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}

@font-face {
  font-family: &#39;QuickensRough&#39;;
  font-style: normal;
  font-weight: 400;
  src: local(&#39;&#39;),
       url(&#39;quickens_rough-webfont.woff2&#39;) format(&#39;woff2&#39;), /* Chrome 26+, Opera 23+, Firefox 39+ */
       url(&#39;quickens_rough-webfont.woff&#39;) format(&#39;woff&#39;); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;add-fonts-to-html&#34;&gt;Add Fonts to HTML&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;# /lib/fonts_web/templates/layout/root.html.heex
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;/&amp;gt;
    &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;/&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;/&amp;gt;
    &amp;lt;%= csrf_meta_tag() %&amp;gt;
    &amp;lt;%= live_title_tag assigns[:page_title] || &amp;quot;SlackerPetal&amp;quot;, suffix: &amp;quot; Â· Phoenix Framework&amp;quot; %&amp;gt;
    &amp;lt;!-- add font here --&amp;gt;
    &amp;lt;link phx-track-static rel=&amp;quot;stylesheet&amp;quot; href={Routes.static_path(@conn, &amp;quot;/assets/vendor/fonts/NotoSans/noto_sans.css&amp;quot;)}/&amp;gt;
    &amp;lt;link phx-track-static rel=&amp;quot;stylesheet&amp;quot; href={Routes.static_path(@conn, &amp;quot;/assets/vendor/fonts/NotoSerif/noto_serif.css&amp;quot;)}/&amp;gt;
    &amp;lt;link phx-track-static rel=&amp;quot;stylesheet&amp;quot; href={Routes.static_path(@conn, &amp;quot;/assets/vendor/fonts/Quickens/quickens.css&amp;quot;)}/&amp;gt;
    &amp;lt;!-- end custom fonts --&amp;gt;
    &amp;lt;link phx-track-static rel=&amp;quot;stylesheet&amp;quot; href={Routes.static_path(@conn, &amp;quot;/assets/app.css&amp;quot;)}/&amp;gt;
    &amp;lt;!-- change this from app.js to js/app.js --&amp;gt;
    &amp;lt;%# &amp;lt;script defer phx-track-static type=&amp;quot;text/javascript&amp;quot; src={Routes.static_path(@conn, &amp;quot;/assets/app.js&amp;quot;)}&amp;gt;&amp;lt;/script&amp;gt; %&amp;gt;
    &amp;lt;script defer phx-track-static type=&amp;quot;text/javascript&amp;quot; src={Routes.static_path(@conn, &amp;quot;/assets/js/app.js&amp;quot;)}&amp;gt;&amp;lt;/script&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;header&amp;gt;
      &amp;lt;section class=&amp;quot;container&amp;quot;&amp;gt;
        &amp;lt;nav&amp;gt;
          &amp;lt;ul&amp;gt;
            &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;https://hexdocs.pm/phoenix/overview.html&amp;quot;&amp;gt;Get Started&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;%= if function_exported?(Routes, :live_dashboard_path, 2) do %&amp;gt;
              &amp;lt;li&amp;gt;&amp;lt;%= link &amp;quot;LiveDashboard&amp;quot;, to: Routes.live_dashboard_path(@conn, :home) %&amp;gt;&amp;lt;/li&amp;gt;
            &amp;lt;% end %&amp;gt;
          &amp;lt;/ul&amp;gt;
        &amp;lt;/nav&amp;gt;
        &amp;lt;a href=&amp;quot;https://phoenixframework.org/&amp;quot; class=&amp;quot;phx-logo&amp;quot;&amp;gt;
          &amp;lt;img src={Routes.static_path(@conn, &amp;quot;/images/phoenix.png&amp;quot;)} alt=&amp;quot;Phoenix Framework Logo&amp;quot;/&amp;gt;
        &amp;lt;/a&amp;gt;
      &amp;lt;/section&amp;gt;
    &amp;lt;/header&amp;gt;
    &amp;lt;%= @inner_content %&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OOPS
&lt;code&gt;(Phoenix.Router.NoRouteError) no route found for GET /assets/vendor/fonts/NotoSerif/noto_serif.css&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;update-the-esbuild-configuration&#34;&gt;Update the esbuild configuration&lt;/h3&gt;
&lt;p&gt;update args in&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# /config/config.exs
# Configure esbuild (the version is required)
config :esbuild,
  version: &amp;quot;0.12.18&amp;quot;,
  default: [
    args: ~w(js/app.js vendor/fonts/NotoSans/noto_sans.css vendor/fonts/Quickens/quickens.css --bundle --loader:.woff2=file --loader:.woff=file --target=es2017 --outdir=../priv/static/assets),
    cd: Path.expand(&amp;quot;../assets&amp;quot;, __DIR__),
    env: %{&amp;quot;NODE_PATH&amp;quot; =&amp;gt; Path.expand(&amp;quot;../deps&amp;quot;, __DIR__)}
  ]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;be careful &lt;code&gt;--target=es2017&lt;/code&gt; in also &lt;code&gt;--target=es2016&lt;/code&gt; in some Phoenix versions, but best to upgrade.&lt;/p&gt;
&lt;h3 id=&#34;update-the-tailwind-configuration&#34;&gt;Update the Tailwind configuration&lt;/h3&gt;
&lt;p&gt;The final step is to update Tailwind (set NotoSans to the default font &amp;amp; make quickens available)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;# /assets/tailwind.config.js
const defaultTheme = require(&#39;tailwindcss/defaultTheme&#39;)

module.exports = {
  mode: &#39;jit&#39;,
  purge: [
    &#39;./js/**/*.js&#39;,
    &#39;../lib/*_web/**/*.*ex&#39;
  ],
  theme: {
    extend: {
      fontFamily: {
        sans: [&#39;NotoSans var&#39;, ...defaultTheme.fontFamily.sans],
        quicken: [&#39;Quickens&#39;]
      },
    },
  },
  variants: {
    extend: {},
  },
  plugins: [],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;resources-16x&#34;&gt;Resources (1.6.x)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=vZBHkvTAb2U&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=vZBHkvTAb2U&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://sergiotapia.com/phoenix-160-liveview-esbuild-tailwind-jit-alpinejs-a-brief-tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://thinkingelixir.com/petal-stack-in-elixir/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://thinkingelixir.com/petal-stack-in-elixir/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://larainfo.com/blogs/build-simple-count-app-using-apline-js-with-tailwind-css&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://larainfo.com/blogs/build-simple-count-app-using-apline-js-with-tailwind-css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://tailwindcss.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://tailwindcss.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/alpinejs/alpine&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/alpinejs/alpine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/tailwindlabs/tailwindcss&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/tailwindlabs/tailwindcss&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://experimentingwithcode.com/custom-fonts-with-phoenix-and-tailwind/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/add-tailwind-html-generators-in-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/add-tailwind-html-generators-in-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://elixirforum.com/t/how-do-i-use-a-custom-font-with-phoenix-1-6-and-esbuild/43791/16&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://elixirforum.com/t/how-do-i-use-a-custom-font-with-phoenix-1-6-and-esbuild/43791/16&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;older-resources&#34;&gt;Older Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=o4Prej0wIZA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=o4Prej0wIZA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://blog.pthompson.org/alpine-js-and-liveview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://blog.pthompson.org/alpine-js-and-liveview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://medium.com/mindvalley-technology/how-to-add-tailwindcss-to-your-phoenix-project-e2250ad31ace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/mindvalley-technology/how-to-add-tailwindcss-to-your-phoenix-project-e2250ad31ace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://thinkingelixir.com/podcast-episodes/021-tailwind-css-alpine-js-and-liveview-with-patrick-thompson/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://thinkingelixir.com/podcast-episodes/021-tailwind-css-alpine-js-and-liveview-with-patrick-thompson/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Phoenix 1.5 PETAL Stack Setup - w/ asdf</title>
      <link>https://btihen.me/post_elixir_phoenix/phoenix_1_5_petal_setup_with_asdf/</link>
      <pubDate>Sat, 10 Apr 2021 01:01:53 +0200</pubDate>
      <guid>https://btihen.me/post_elixir_phoenix/phoenix_1_5_petal_setup_with_asdf/</guid>
      <description>&lt;p&gt;I have been enjoying the tools associated with Elixir and exploring the frontend. LiveView helps make that more intuitive and when that isn&amp;rsquo;t enough, AlpineJS is a lightweight JS tool with a similar syntax as Vue.&lt;/p&gt;
&lt;h2 id=&#34;install-asdf---and-required-software&#34;&gt;Install asdf - and required software&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://thinkingelixir.com/install-elixir-using-asdf/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://thinkingelixir.com/install-elixir-using-asdf/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cogini.com/blog/using-asdf-with-elixir-and-phoenix/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On a Mac I used Homebrew:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;brew install asdf
echo -e &#39;\n. $(brew --prefix asdf)/asdf.sh&#39; &amp;gt;&amp;gt; ~/.bash_profile
echo -e &#39;\n. $(brew --prefix asdf)/etc/bash_completion.d/asdf.bash&#39; &amp;gt;&amp;gt; ~/.bash_profile
source ~/.bash_profile  # (or open a new terminal)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you can install asdf software packages:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;asdf plugin-add erlang
asdf plugin-add elixir
asdf plugin-add nodejs
asdf plugin-add Postgres
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you need to install the desired versions (usually the newest) - currently:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;asdf list all erlang
asdf install erlang 23.3.1

# note the elixir version otp must match the erlang version!
asdf list all elixir
asdf install elixir 1.11.4-otp-23

# asdf install elixir 1.11.4-otp-24
# if you mismatch elixir with erlang you will get errors like:
# {&amp;quot;init terminating in do_boot&amp;quot;,{undef,[{elixir,start_cli,[],[]},{init,start_em,1,[]},{init,do_boot,3,[]}]}}

asdf list all nodejs
asdf install nodejs lts-fermium

asdf list all Postgres
asdf install Postgres 13.2
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;get-the-newest-phoenix-hex-package&#34;&gt;Get the newest Phoenix Hex Package&lt;/h2&gt;
&lt;p&gt;Once you have established you have the requrements - the download the newest version of Phoenix (go to: 
&lt;a href=&#34;https://hexdocs.pm/phoenix/installation.html#phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://hexdocs.pm/phoenix/installation.html#phoenix&lt;/a&gt; to see the newest version) - at the time of this writing its 1.5.8 - be sure its installed using:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mix archive.install hex phx_new 1.5.8
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create--config-a-project&#34;&gt;create / config a project&lt;/h2&gt;
&lt;p&gt;First we will creat the folder / project location&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir fenix
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we will tell it which software to use:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;touch fenix/.tool-versions
cat &amp;lt;&amp;lt;EOF &amp;gt;&amp;gt;fenix/.tool-versions
erlang 23.3.1
elixir 1.11.4-otp-23
Postgres 13.2
nodejs lts-Fermium
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;create-a-new-phoenix-project&#34;&gt;Create a new Phoenix Project&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://carlyleec.medium.com/create-an-elixir-phoenix-app-with-asdf-e918649b4d58&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Now you can simply do:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mix phx.new fenix --live
cd fenix
mix ecto.create
mix phx.server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;assuming all is good lets configure git:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
git add .
git commit -m &amp;quot;initial Phoneix install with LiveView&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;install--test-alpine-js&#34;&gt;install &amp;amp; test Alpine JS&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://underjord.io/getting-started-with-petal.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://underjord.io/getting-started-with-petal.html&lt;/a&gt;

&lt;a href=&#34;https://dockyard.com/blog/2020/12/21/optimizing-user-experience-with-liveview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dockyard.com/blog/2020/12/21/optimizing-user-experience-with-liveview&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd assets
npm install alpinejs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now change &lt;code&gt;app.js&lt;/code&gt; is to require our new setup:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# assets/js/app.js
// .. after the app.scss import add:
import Alpine from &amp;quot;alpinejs&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;still in &lt;code&gt;assets/js/app.js&lt;/code&gt; find&lt;code&gt;: &lt;/code&gt;let liveSocket = new LiveSocket(&amp;quot;/live&amp;quot;, Socket, {params: {_csrf_token: csrfToken}})`&lt;/p&gt;
&lt;p&gt;and change to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;let liveSocket =
    new LiveSocket(&amp;quot;/live&amp;quot;,
                    Socket,
                    { params: {_csrf_token: csrfToken},
                      dom: {
                        onBeforeElUpdated(from, to){
                          if(from.__x){ Alpine.clone(from.__x, to) }
                        }
                    } }
                  )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;TEST by adding to the end of: &lt;code&gt;lib/fenix_web/live/page_live.html.leex&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;&amp;lt;section&amp;gt;
  &amp;lt;h2&amp;gt;Alpine JS Installed&amp;lt;/h2&amp;gt;
  &amp;lt;div x-data=&amp;quot;{name:&#39;&#39;}&amp;quot;&amp;gt;
    &amp;lt;label for=&amp;quot;name&amp;quot;&amp;gt;Name:&amp;lt;/label&amp;gt;
    &amp;lt;input id=&amp;quot;name&amp;quot; type=&amp;quot;text&amp;quot; x-model=&amp;quot;name&amp;quot; /&amp;gt;
    &amp;lt;p&amp;gt;&amp;lt;br&amp;gt;&amp;lt;b&amp;gt;&amp;lt;em&amp;gt;Output:&amp;lt;/em&amp;gt;&amp;lt;/b&amp;gt; &amp;lt;span x-text=&amp;quot;name&amp;quot;&amp;gt;&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;test with:
&lt;code&gt;mix phx.server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;when typing the name should appear below!&lt;/p&gt;
&lt;p&gt;let&amp;rsquo;s snapshot:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -m &amp;quot;phoenix with alpine js&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;integrating-tailwind-into-phoenix&#34;&gt;Integrating Tailwind into phoenix&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&lt;/a&gt;

&lt;a href=&#34;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This source gives several options - here we install with &lt;code&gt;postcss-import&lt;/code&gt; (for components from the beginning):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;cd assets
npm install tailwindcss postcss autoprefixer postcss-loader@4.2  postcss-import --save-dev

touch postcss.config.js
cat &amp;lt;&amp;lt;EOF &amp;gt; postcss.config.js
module.exports = {
  plugins: {
    &amp;quot;postcss-import&amp;quot;: {},
    tailwindcss: {},
    autoprefixer: {}
  }
}
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;now open: &lt;code&gt;assets/webpack.config.js&lt;/code&gt; and find:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;{
	test: /\.[s]?css$/,
	use: [
		MiniCssExtractPlugin.loader,
		&#39;css-loader&#39;,
		&#39;sass-loader&#39;,
	],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;change too (add &lt;code&gt;&#39;postcss-loader&#39;&lt;/code&gt; between &lt;code&gt;&#39;css-loader&#39;&lt;/code&gt; &amp;amp; &lt;code&gt;&#39;sass-loader&#39;&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;{
	test: /\.[s]?css$/,
	use: [
		MiniCssExtractPlugin.loader,
		&#39;css-loader&#39;,
		&#39;postcss-loader&#39;,
		&#39;sass-loader&#39;,
	],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;now initialize tailwind config with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;npx tailwindcss init
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;this creates the file &lt;code&gt;tailwind.config.js&lt;/code&gt; we will replace the &lt;code&gt;purge: [],&lt;/code&gt; section with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;purge: [
    &#39;../lib/**/*.ex&#39;,
    &#39;../lib/**/*.leex&#39;,
    &#39;../lib/**/*.eex&#39;,
    &#39;./js/**/*.js&#39;
  ],
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now the fill will look like:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;module.exports = {
  purge: [
    &#39;../lib/**/*.ex&#39;,
    &#39;../lib/**/*.leex&#39;,
    &#39;../lib/**/*.eex&#39;,
    &#39;./js/**/*.js&#39;
  ],
  darkMode: false, // or &#39;media&#39; or &#39;class&#39;
  theme: {
    extend: {},
  },
  variants: {
    extend: {},
  },
  plugins: [],
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;now in &lt;code&gt;assets/package.json&lt;/code&gt; find:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  &amp;quot;scripts&amp;quot;: {
    &amp;quot;deploy&amp;quot;: &amp;quot;webpack --mode production&amp;quot;,
    &amp;quot;watch&amp;quot;: &amp;quot;webpack --mode development --watch&amp;quot;
  },
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and change this to:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;  &amp;quot;scripts&amp;quot;: {
    &amp;quot;deploy&amp;quot;: &amp;quot;NODE_ENV=production webpack --mode production&amp;quot;,
    &amp;quot;watch&amp;quot;: &amp;quot;webpack --mode development --watch&amp;quot;
  },
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;we will create a file for our custom styles the &lt;code&gt;assets/css/custom-style.css&lt;/code&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# assuming you are still in the assets directory on the cli
touch css/custom-styles.css
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let&amp;rsquo;s also create our a custom component (we will make buttons for a counter to be sure tailwind and aplineJS are playing well together):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;# assuming you are still in the assets directory on the cli
mkdir css/components
touch css/components/buttons.css
cat &amp;lt;&amp;lt;EOF &amp;gt; css/components/buttons.css
@layer components {
  .btn-redish {
    @apply bg-red-300 hover:bg-red-600 text-blue-800 font-bold py-2 px-4 rounded;
  }
  .btn-greenish {
    @apply bg-green-300 hover:bg-green-600 text-blue-800 font-bold py-2 px-4 rounded;
  }
}
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now will will configure Phoenix to load Tailwind, our custom-styles and our custom-components &amp;ndash; DO THIS AT THE TOP OF the file &lt;code&gt;assets/css/app.scss&lt;/code&gt; (@imports must be before all else):&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;/* Import tailwind - with postcss-import installed */
@import &amp;quot;tailwindcss/base&amp;quot;;
@import &amp;quot;tailwindcss/components&amp;quot;;
@import &amp;quot;tailwindcss/utilities&amp;quot;;

/* custom styles - put after base imports! */
@import &amp;quot;./custom-styles.css&amp;quot;;

/* import custom components */
@import &amp;quot;./components/buttons.css&amp;quot;;

/* default phoenix styles - eventually remove */
@import &amp;quot;./phoenix.css&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;add a test html from tailwind to the end of: &lt;code&gt;lib/fenix_web/live/page_live.html.leex&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-elixir&#34;&gt;&amp;lt;section class=&amp;quot;grid grid-cols-1 gap-4&amp;quot;&amp;gt;
  &amp;lt;div&amp;gt;
    &amp;lt;h2 class=&amp;quot;text-red-500 text-5xl font-bold text-center&amp;quot;&amp;gt;Tailwind CSS with AlpineJS&amp;lt;/h2&amp;gt;
    &amp;lt;p class=&amp;quot;mt-5 font-bold text-center&amp;quot;&amp;gt;Red Title with Colored Counter Buttons&amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;div class=&amp;quot;mt-10 flex justify-center&amp;quot; x-data=&amp;quot;{ count: 0 }&amp;quot;&amp;gt;
    &amp;lt;button class=&amp;quot;btn-redish&amp;quot; x-on:click=&amp;quot;count--&amp;quot;&amp;gt;Decrement&amp;lt;/button&amp;gt;
    &amp;lt;code&amp;gt;count: &amp;lt;/code&amp;gt;&amp;lt;code x-text=&amp;quot;count&amp;quot;&amp;gt;&amp;lt;/code&amp;gt;
    &amp;lt;button class=&amp;quot;btn-greenish&amp;quot; x-on:click=&amp;quot;count++&amp;quot;&amp;gt;Increment&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/section&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now when we start the server with &lt;code&gt;mix phx.server&lt;/code&gt; we should have a centered / red title and colored buttons on our counter.&lt;/p&gt;
&lt;p&gt;now lets snapshot our PETAL setup:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -m &amp;quot;Tailwind installed&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;a href=&#34;https://www.youtube.com/watch?v=o4Prej0wIZA&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.youtube.com/watch?v=o4Prej0wIZA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;http://blog.pthompson.org/alpine-js-and-liveview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://blog.pthompson.org/alpine-js-and-liveview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://pragmaticstudio.com/tutorials/adding-tailwind-css-to-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/get-started-with-tailwind-in-phoenix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://fullstackphoenix.com/tutorials/combine-phoenix-liveview-with-alpine-js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://medium.com/mindvalley-technology/how-to-add-tailwindcss-to-your-phoenix-project-e2250ad31ace&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/mindvalley-technology/how-to-add-tailwindcss-to-your-phoenix-project-e2250ad31ace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://thinkingelixir.com/podcast-episodes/021-tailwind-css-alpine-js-and-liveview-with-patrick-thompson/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://thinkingelixir.com/podcast-episodes/021-tailwind-css-alpine-js-and-liveview-with-patrick-thompson/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
